#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{sectsty}
\chapterfont{\centering} 

\newcommand{\Judul}{Implementasi Arsitektur REST API Pada Perpustakaan XYZ}
\newcommand{\DosenPembimbing}{Dr. DINA INDARTI, S.Si, M.Si}
\newcommand{\NamaMahasiswa}{Rizki Mufrizal}
\newcommand{\NIRM}{92310029}
\newcommand{\Tahun}{2018}
\newcommand{\TempatLahir}{Puuk}
\newcommand{\TglLahir}{15 November 1993}

\newcommand{\TanggalLulus}{29 Maret 2012}
\newcommand{\KataKunci}{Kata kunci disini}
\newcommand{\JumlahHalamanDepan}{xiii}
\newcommand{\JumlahHalaman}{117}
\newcommand{\TahunPustaka}{2014:2017}

\newcommand{\KotaPenulis}{Jakarta}
\newcommand{\TglTulis}{Mei 2012}

\newcommand{\Rektor}{Prof. Dr. E.S. Margianti, SE, MM}
\newcommand{\Koordinator}{Prof. Dr. Yuhara Sukra MSc}
\newcommand{\Direktur}{Prof. Dr. Dharma Tintri, SE.Ak, MBA}
\newcommand{\Kaprodi}{Dr. Yuhilza Hanum SSi, SKom, MEng}

% The following commands set the page numbers on the top right
% except in the beginning of chapters
\lhead{}
\chead{}
\rhead{\thepage}
\lfoot{}
\cfoot{}
\rfoot{}
\renewcommand{\headrulewidth}{0pt}

%%%%%%%
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language bahasa
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Indeks
\shortcut idx
\color #008000
\end_index
\leftmargin 4cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{made-hypen.tex} 
\end_layout

\begin_layout Plain Layout


\backslash
sloppy 
\end_layout

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Halaman Judul}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing double
\align center

\series bold
\size huge
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
MakeUppercase{
\backslash
Judul}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{25mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/LogoGunadarma.jpg
	width 45mm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{5mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size large
TESIS
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{3cm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="13cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align center
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nama
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NamaMahasiswa
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NIM/ NIRM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NIRM
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pembimbing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
DosenPembimbing
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
vspace*{25mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
UNIVERSITAS GUNADARMA
\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
PROGRAM PASCA SARJANA
\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Tahun
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{3mm}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Halaman Pengesahan
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Halaman Pengesahan}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="35mm">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="60text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Judul Penelitian
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
MakeUppercase{
\backslash
Judul}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nama Mahasiswa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NamaMahasiswa
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NIRM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NIRM
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tanggal Lulus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TanggalLulus
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
Menyetujui,
\end_layout

\begin_layout Standard
\align center
Komisi Pembimbing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{15mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
(
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
DosenPembimbing
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{25mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
(
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Koordinator
\end_layout

\end_inset

) 
\end_layout

\begin_layout Standard
\align center
Anggota
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{25mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
(
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Direktur
\end_layout

\end_inset

) 
\end_layout

\begin_layout Standard
\align center
Direktur
\end_layout

\begin_layout Chapter*
Abstraksi
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Abstraksi}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NamaMahasiswa
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NIRM
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
MakeUppercase{
\backslash
Judul}
\end_layout

\end_inset

.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset

 Kata Kunci : 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
KataKunci
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset

 (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
JumlahHalamanDepan
\end_layout

\end_inset

 + 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
JumlahHalaman
\end_layout

\end_inset

 + lampiran)
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
Setiap perusahaan membutuhkan informasi yang cepat dan akurat.
 Salah satu informasi yang dibutuhkan ialah informasi aset perusahaan.
 Pengelolaan aset dalam suatu perusahaan yang terpusat (berbasis web), dapat
 menjangkau seluruh elemen yang tersebar di berbagai tempat, karena mengurangi
 waktu proses permintaan, pemeliharaan sampai dengan penerimaan aset.
 Untuk mengatasi hal ini peneliti merancang suatu sistem informasi manajemen
 dan penyusutan aset.
 Tujuan dari penelitian ini untuk membantu kinerja karyawan yang mencakup
 permintaan kebutuhan, persetujuan permintaan, penerimaan, pemeliharaan,
 serta penyusutan aset.
 
\end_layout

\begin_layout Standard
Secara umum pendekatan yang dipakai penulis ialah pengumpulan data, analisis
 serta merancang sistem berdasarkan hasil penelitian yang dilakukan.
\end_layout

\begin_layout Standard
Hasil perancangan ini dapat diperolehnya sistem informasi manajemen dan
 penyusutan aset yang dibutuhkan, sehingga dapat mempercepat proses permintaan,
 persetujuan permintaan, penerimaan, pemeliharaan, dan penyusutan aset,
 serta menunjang manajemen dalam mengambil keputusan strategis.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset

 Daftar Pustaka (
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TahunPustaka
\end_layout

\end_inset

)
\end_layout

\begin_layout Chapter*
Daftar Riwayat Hidup
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Daftar Riwayat Hidup}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Penulis dilahirkan di 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TempatLahir
\end_layout

\end_inset

, pada tanggal 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TglLahir
\end_layout

\end_inset

, anak ketiga dari 3 bersaudara, menyelesaikan pendidikan Sekolah Dasar
 di SDN 03 Karawaci, Tangerang dan tamat pada tahun 1999, Sekolah Pendidikan
 Menengah Pertama di MTs Mathla'ul Huda Bogor dan tamat pada tahun 2002,
 serta Pendidikan Menengah Atas di SMA Islamic Village Tangerang dan tamat
 pada tahun 2004.
 
\end_layout

\begin_layout Standard
Tahun 2005 melanjutkan pendidikan diploma tiga di Universitas Gunadarma
 dengan mengambil jurusan Manajemen Informatika, dan lulus pada tahun 2008
 dengan membuat judul penelitian 
\begin_inset Quotes eld
\end_inset

Teknik Pembuatan Distro Linux Atunez- ME Berbasis PCLinuxOS
\begin_inset Quotes erd
\end_inset

.
 Kemudian penulis melanjutkan pendidikan strata satu di Universitas Gunadarma
 dengan mengambil jurusan Sistem Informasi, dan lulus pada 2010 dengan membuat
 judul penelitian “Repository Mobile Laboratory”
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{25mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align right
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
KotaPenulis
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TglTulis
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align right
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
NamaMahasiswa
\end_layout

\end_inset

, S.
 Kom
\end_layout

\begin_layout Chapter*
Kata Pengantar
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Kata Pengantar}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Segala puji dan syukur penulis naikkan ke hadirat Allah S.W.T yang Maha Kuasa
 yang telah memberikan berkat, anugerah dan karunia yang melimpah, sehingga
 penulis dapat menyelesaikan Tesis yang berjudul: 
\begin_inset Quotes eld
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
MakeUppercase{
\backslash
Judul}
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Pada kesempatan ini penulis menyampaikan terima kasih yang sebesar-besarnya
 kepada:
\end_layout

\begin_layout Enumerate
Ibu 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Rektor
\end_layout

\end_inset

, selaku Rektor Universitas Gunadarma yang telah memberikan kesempatan kepada
 penulis untuk melanjutkan pendidikan dan dalam penyusunan tesis ini.
\end_layout

\begin_layout Enumerate
Bapak 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Koordinator
\end_layout

\end_inset

, selaku Koordinator Program Pasca Sarjana Universitas Gunadarma.
\end_layout

\begin_layout Enumerate
Bapak 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Direktur
\end_layout

\end_inset

, selaku Direktur Program Pasca Sarjana Universitas Gunadarma.
\end_layout

\begin_layout Enumerate
Bapak 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Kaprodi
\end_layout

\end_inset

, selaku Ketua Prodi Program Pasca Sarjana Universitas Gunadarma.
\end_layout

\begin_layout Enumerate
Bapak 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
DosenPembimbing
\end_layout

\end_inset

, selaku dosen pembimbing serta dosen pengajar yang telah banyak meluangkan
 waktu, tenaga serta pikiran dalam membimbing dan mengarahkan penulis untuk
 menyelesaikan penelitian tesis ini.
\end_layout

\begin_layout Enumerate
Bapak dan Ibu Dosen Pengajar Universitas Gunadarma yang telah banyak memberikan
 ilmu pengetahuan kepada penulis.
\end_layout

\begin_layout Enumerate
Kedua orang tua dan kakak-kakak tercinta yang selalu mendukung dan terus
 memberikan motivasi.
\end_layout

\begin_layout Enumerate
Seluruh rekan seperjuangan di Universitas Gunadarma yang telah banyak membantu
 penulis.
\end_layout

\begin_layout Enumerate
Semua pihak yang tidak tersebutkan yang telah membantu penyelesaian Tugas
 Akhir ini, penulis ucapkan juga terima kasih atas segala bantuan dan sarannya.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sebagai manusia biasa yang tak luput dari kesalahan, maka penulis meminta
 maaf atas segala kekurangan dan keterbatasan dalam penyusunan Tugas Akhir
 ini.
 
\end_layout

\begin_layout Standard
Akhir kata, hanya kepada Tuhan jualah segalanya dikembalikan dan penulis
 sadari bahwa penelitian ini masih jauh dari sempurna, disebabkan karena
 berbagai keterbatasan yang penulis miliki.
 Untuk itu penulis mengharapkan kritik dan saran yang bersifat membangun
 untuk menjadi perbaikan di masa yang akan datang.
 
\end_layout

\begin_layout Standard
Semoga apa yang ada pada penelitian Tesis ini dapat bermanfaat bagi kita
 semua.
 Amin.
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{20mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align right
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
KotaPenulis
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TglTulis
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align right
Penulis
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Daftar Isi}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Daftar Gambar}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Daftar Tabel}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
PENDAHULUAN
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Latar Belakang
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Perkembangan teknologi yang sangat pesat pada zaman ini telah memberikan
 banyak manfaat di berbagai bidang.
 Penggunaan teknologi juga membantu manusia dalam menyelesaikan berbagai
 macam pekerjaan.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "SinergiSains"
literal "false"

\end_inset

, teknologi adalah sarana untuk meningkatkan kemampuan manusia dan suatu
 instrumen perubahan, sedangkan Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "poerwadarminta1954kamus"
literal "false"

\end_inset

, teknologi adalah ilmu pengetahuan tentang cara membuat sesuatu yang berkenaan
 dengan hasil industri atau ilmu pengetahuan tentang cara membuat sesuatu
 atau melakukan sesuatu.
\end_layout

\begin_layout Standard
Salah satu contoh penggunaan teknologi yang terus meningkat adalah internet,
 hal ini dibuktikan dengan adanya survei yang dilakukan Asosiasi Penyelenggara
 Jasa Internet Indonesia (APJII).
 Menurut APJII selama kurun waktu 18 tahun (2000 - 2017) pengguna internet
 di Indonesia meningkat dari 1,9 juta menjadi 143,26 juta pengguna.
 Salah satu faktor meningkatnya penggunaan internet disebabkan adanya peningkata
n penggunaan teknologi 
\emph on
smartphone
\emph default
.
 Berdasarkan survei APJII, pada tahun 2016 sebanyak 45,4% pengguna hanya
 memiliki 1 perangkat 
\emph on
smartphone
\emph default
 sedangkan pada tahun 2017, pengguna yang memiliki 1 perangkat 
\emph on
smartphone
\emph default
 meningkat menjadi 95,75%.
\end_layout

\begin_layout Standard
Peningkatan penggunaan teknologi 
\emph on
smartphone
\emph default
 sangat berpengaruh terhadap kinerja aplikasi yang telah dibangun.
 Semakin meningkatnya penggunaan 
\emph on
smartphone
\emph default
 maka pengguna yang mengakses aplikasi menjadi semakin banyak.
 Dengan peningkatan pengguna pada sebuah aplikasi, maka aplikasi yang dirancang
 harus dapat menangani peningkatan jumlah pengguna tersebut.
 Sebagian aplikasi yang telah dirancang dan dibangun saat ini masih menggunakan
 arsitektur 
\emph on
monolithic
\emph default
.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "daya2016microservices"
literal "false"

\end_inset

, arsitektur 
\emph on
monolithic
\emph default
 adalah suatu arsitektur yang mengambarkan sebuah aplikasi yang menjalankan
 semua logika dalam satu 
\emph on
server
\emph default
 aplikasi.
 Peningkatan jumlah pengguna aplikasi dapat mempengaruhi proses pemeliharaan
 aplikasi, kinerja aplikasi dan kompleknya proses pembaruan aplikasi pada
 arsitektur 
\emph on
monolithic
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "daya2016microservices"
literal "false"

\end_inset

, hal ini disebabkan aplikasi hanya berjalan di dalam satu 
\emph on
server
\emph default
 aplikasi.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "dragoni2017microservices"
literal "false"

\end_inset

, proses pemeliharaan aplikasi yang dibangun dengan arsitektur 
\emph on
monolithic
\emph default
 yang berukuran besar sangat sulit dikarenakan kompleksitasnya.
 Salah satu contoh kompleknya proses pembaruan telah dijelaskan pada penelitian
 
\begin_inset CommandInset citation
LatexCommand cite
key "flexiblearchitecture"
literal "false"

\end_inset

 yaitu salah satu permasalahan yang sering terjadi pada arsitektur 
\emph on
monolitich
\emph default
 adalah 
\emph on
Resilient
\emph default
 
\emph on
Challenges
\emph default
, dimana jika terjadi kegagalan pada saat proses pembaruan atau penambahan
 fitur baru pada aplikasi, maka seluruh fitur aplikasi akan mengalami kegagalan
 sistem.
 Di dalam penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "dragoni2017microservices"
literal "false"

\end_inset

 juga dijelaskan jika terjadi perubahan salah satu modul aplikasi pada arsitektu
r monolitich maka dibutuhkan proses 
\emph on
restart
\emph default
 seluruh aplikasi, semakin besar sebuah aplikasi maka proses 
\emph on
restart
\emph default
 aplikasi menjadi semakin lama sehingga selama proses 
\emph on
restart
\emph default
 berlangsung maka aplikasi tidak dapat digunakan.
\end_layout

\begin_layout Standard
Munculnya permasalahan diatas, sehingga muncul sebuah arsitektur baru dikalangan
 para peneliti yaitu arsitektur 
\emph on
microservice
\emph default
.
 Arsitektur 
\emph on
microservice
\emph default
 adalah gaya arsitektur perangkat lunak yang memerlukan pemecahan aplikasi
 secara bisnis 
\begin_inset CommandInset citation
LatexCommand cite
key "messinasimplified"
literal "false"

\end_inset

, sedangkan di dalam penelitian
\emph on
 
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "ueda2016workload"
literal "false"

\end_inset

, dijelaskan bahwa arsitektur 
\emph on
microservice
\emph default
 adalah sebuah arsitektur baru dimana pengembangan aplikasi dilakukan dalam
 bentuk 
\emph on
web
\emph default
 
\emph on
service
\emph default
 kecil yang saling berkomunikasi satu sama lain.
 Penggunaan arsitektur 
\emph on
microservice
\emph default
 dalam mengembangkan sebuah aplikasi dapat memperbaiki permasalahan diatas
 yaitu adanya pemisahan 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 menjadi kecil sehingga jika terjadi perubahan atau pembaruan di sebuah
 
\emph on
service
\emph default
 tidak akan mempengaruhi 
\emph on
service
\emph default
 yang sedang berjalan.
\end_layout

\begin_layout Standard
Setiap perusahaan yang mengembangkan aplikasi dengan menggunakan arsitektur
 
\emph on
monolithic
\emph default
 akan mengalami permasalahan diatas, sehingga perusahaan mencoba memperbaiki
 permasalahan tersebut.
 Salah satu solusi untuk mengatasi masalah tersebut adalah melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
.
 Terdapat banyak faktor yang dihadapi perusahaan dalam menerapkan arsitektur
 
\emph on
microservice
\emph default
, diantaranya adalah proses dan tahapan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 ke arsitektur 
\emph on
microservice
\emph default
, hal ini juga dihadapi oleh perusahaan PT Graha Usaha Teknik.
 PT Graha Usaha Teknik adalah sebuah perusahaan swasta di Indonesia yang
 memberikan manajemen proyek profesional dan jasa implementasi di bidang
 teknik pengadaan, konstruksi dan pemeliharaan.
 PT Graha Usaha Teknik telah mengembangkan sebuah aplikasi absensi dengan
 arsitektur 
\emph on
monolithic
\emph default
 yang bertujuan untuk menangani absensi setiap karyawan yang terdapat pada
 perusahaan tersebut.
 Aplikasi absensi yang telah dibangun pada PT Graha Usaha Teknik dengan
 arsitektur 
\emph on
monolithic
\emph default
 tersebut memiliki banyak fitur seperti laporan jam kerja karyawan, peminjaman
 dan lain sebagainya.
 Seiring dengan bertambahnya karyawan dan berkembanganya PT Graha Usaha
 Teknik, maka fitur yang dikembangkan semakin bertambah dan jumlah trafik
 yang diproses oleh aplikasi semakin besar sehingga proses pemeliharaan
 aplikasi menjadi semakin sulit, kinerja aplikasi semakin menurun, dan proses
 pembaruan yang semakin sulit.
 Untuk menangani permasalahan ini, aplikasi absensi pada PT Graha Usaha
 Teknik diharuskan melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
.
\end_layout

\begin_layout Standard
Berdasarkan beberapa penelitian terdahulu, proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice 
\emph default
telah dilakukan pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "levcovitz2016towards"
literal "false"

\end_inset

, dimana para peneliti mengembangkan metode 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolitik
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 melalui 6 tahapan dengan studi kasus sistem perbankan yang mengelola 3,5
 juta data nasabah dan hampir 2 juta transaksi perharinya.
 Penelitian mengenai proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 juga telah dilakukan di dalam penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset


\emph on
, 
\emph default
dimana terdapat 15 tahapan yang digunakan untuk proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
.
 Proses 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 dengan menggunakan 15 tahapan yang diusulkan oleh penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 juga telah diimplementasikan di dalam penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "suryotrisongko2017arsitektur"
literal "false"

\end_inset

, dimana 15 tahapan tersebut telah berhasil digunakan untuk proses 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 pada studi kasus sistem manajemen asosiasi/keanggotaan.
 Selain dari ketiga penelitian diatas, proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice 
\emph default
juga telah dilakukan di beberapa perusahaan dengan menggunakan strategi
 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
, dimana arsitektur 
\emph on
monolitich
\emph default
 dilakukan proses 
\emph on
refactoring
\emph default
 berdasarkan 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 dan dilakukan secara bertahap 
\begin_inset CommandInset citation
LatexCommand cite
key "di2018migrating"
literal "false"

\end_inset

.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "dr.lathasadanandamsoftwarearchitectdanskeitsupportservicesindiapvtltd.2018"
literal "false"

\end_inset

, strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dapat digunakan sebagai salah satu strategi proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice.
 
\emph default
Proses 
\emph on
refactoring
\emph default
 dengan menggunakan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dijalankan secara bertahap berdasarkan jumlah 
\emph on
service
\emph default
 yang tersedia sehingga aplikasi dengan arsitektur 
\emph on
monolitich
\emph default
 tidak dihapus hingga seluruh 
\emph on
service
\emph default
 telah berhasil dilakukan proses 
\emph on
refactoring
\emph default
, strategi ini bertujuan untuk mengurangi kegagalan sistem pada aplikasi
 dengan arsitektur 
\emph on
microservice
\emph default
 jika terjadi kegagalan pada saat proses 
\emph on
refactoring
\emph default
 berlangsung 
\begin_inset CommandInset citation
LatexCommand cite
key "dr.lathasadanandamsoftwarearchitectdanskeitsupportservicesindiapvtltd.2018"
literal "false"

\end_inset

.
 Untuk melakukan proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 pada PT Graha Usaha Teknik dan mengurangi kegagalan sistem pada saat proses
 refactoring tersebut, penulis bermaksud menggunakan 15 tahapan yang diusulkan
 oleh para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 untuk melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice 
\emph default
dan
\emph on
 
\emph default
strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 sehingga dapat menyelesaikan permasalahan pada perusahaan PT Graha Usaha
 Teknik.
\end_layout

\begin_layout Section
Identifikasi Masalah
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aplikasi absensi PT Graha Usaha Teknik merupakan salah satu aplikasi berbasis
 
\emph on
web
\emph default
 yang digunakan karyawan untuk melakukan absensi secara individu.
 Aplikasi absensi ini digunakan sebagai laporan perhitungan jam masuk dan
 pulang dari karyawan pada PT Graha Usaha Teknik.
 Aplikasi absensi PT Graha Usaha Teknik dibangun dengan bahasa pemrograman
 java berbasis arsitektur 
\emph on
monolithic
\emph default
.
\end_layout

\begin_layout Standard
Bertambahnya karyawan dan berkembangnya PT Graha Usaha Teknik merupakan
 sebuah masalah terhadap meningkatnya jumlah trafik pada aplikasi absensi
 tersebut.
 Masalah yang dihadapi oleh PT Graha Usaha Teknik adalah proses pemeliharaan
 aplikasi semakin sulit, kinerja aplikasi semakin menurun, dan proses pembaruan
 aplikasi yang semakin sulit.
 
\end_layout

\begin_layout Standard
Salah satu kekurangan penggunaan arsitektur 
\emph on
monolithic
\emph default
 pada aplikasi absensi PT Graha Usaha Teknik adalah sulit melakukan pemeliharaan
 aplikasi.
 Jika terjadi kegagalan sistem pada saat proses perbaikan atau pembaruan
 sebuah fitur pada aplikasi tersebut, maka semua fitur yang terdapat pada
 aplikasi tersebut juga ikut diperbarui.
 Proses pembaruan semua fitur menyebabkan seluruh fitur tidak dapat digunakan
 dalam jangka waktu tertentu.
 Hal ini menjadi masalah jika proses perbaikan atau pembaruan aplikasi dilakukan
 pada saat tinggi nya trafik penggunaan aplikasi.
\end_layout

\begin_layout Standard
Untuk dapat mengatasi masalah pada aplikasi absensi PT Graha Usaha Teknik
 maka harus dilakukan proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
.
 Pada penelitian ini, proses 
\emph on
refactoring
\emph default
  arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 dilakukan dengan strategi 
\emph on
strangler pattern
\emph default
 dan 15 langkah sesuai dengan saran dari para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 untuk menyelesaikan permasalahan aplikasi absensi pada PT Graha Usaha Teknik.
\end_layout

\begin_layout Section
Batasan Masalah
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada penelitian ini, terdapat beberapa batasan masalah diantaranya adalah
 :
\end_layout

\begin_layout Itemize
Pembahasan proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic 
\emph default
menjadi arsitektur 
\emph on
microservice
\emph default
 hanya pada PT Graha Usaha Teknik dengan menggunakan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dan 15 langkah sesuai dengan saran dari para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

.
\end_layout

\begin_layout Itemize
Pembahasan mengenai analisis arsitektur 
\emph on
microservice
\emph default
 pada PT Graha Usaha Teknik setelah dilakukan proses 
\emph on
refactoring
\emph default
.
\end_layout

\begin_layout Section
Perumusan Masalah
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Rumusan masalah pada penelitian ini adalah :
\end_layout

\begin_layout Itemize
Bagaimana cara menerapkan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dan 15 langkah sesuai dengan saran dari para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 untuk melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic 
\emph default
menjadi arsitektur 
\emph on
microservice
\emph default
 pada PT Graha Usaha Teknik ?.
\end_layout

\begin_layout Itemize
Bagaimana menganalisis arsitektur 
\emph on
microservice
\emph default
 pada PT Graha Usah Teknik setelah dilakukan proses 
\emph on
refactoring
\emph default
 ?.
\end_layout

\begin_layout Section
Tujuan Penelitian
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tujuan dari penelitian ini adalah :
\end_layout

\begin_layout Itemize
Memberikan gambaran mengenai cara menerapkan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dan 15 langkah sesuai dengan saran dari para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 untuk melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic 
\emph default
menjadi arsitektur 
\emph on
microservice
\emph default
 pada PT Graha Usaha Teknik.
\end_layout

\begin_layout Itemize
Menganalisis arsitektur 
\emph on
microservice
\emph default
 pada PT Graha Usaha Teknik setelah dilakukan proses 
\emph on
refactoring
\emph default
.
\end_layout

\begin_layout Section
Manfaat Penelitian
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Penelitian ini berguna untuk menambah ilmu pengetahuan khusus nya kepada
 penulis, memecahkan permasalahan pada aplikasi yang berbasis arsitektur
 
\emph on
monolithic
\emph default
, memberikan langkah - langkah dalam proses 
\emph on
refactoring
\emph default
 arsitektur dengan menggunakan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dan 15 langkah sesuai dengan saran dari para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 sehingga dapat menyelesaikan permasalahan sulit nya proses pemeliharaan
\emph on
, 
\emph default
pembaruan aplikasi, dan menurun nya kinerja aplikasi serta proses 
\emph on
refactoring
\emph default
 arsitektur ini dapat digunakan sebagai acuan penelitian selanjutnya.
\end_layout

\begin_layout Chapter
LANDASAN TEORI
\end_layout

\begin_layout Section
Absensi
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut kamus Inggris Indonesia yang ditulis oleh John M, Ecehola dan Hassan
 Shandily, kata absensi berasal dari bahasa Inggris yaitu Abcecense yang
 berarti kemangkiran, ketidakhadiran, ketiadaan atau ketidakadaan 
\begin_inset CommandInset citation
LatexCommand cite
key "echols1994kamus"
literal "false"

\end_inset

.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "panggabean2002mutiara"
literal "false"

\end_inset

, ketidakhadiran (absenteism) adalah kegagalan untuk melapor pada waktu
 kerja.
 Dengan kata lain, absensi merupakan kegagalan seorang karyawan yang tidak
 dapat hadir pada hari kerja.
\end_layout

\begin_layout Section
Arsitektur Monolitich
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "daya2016microservices"
literal "false"

\end_inset

, arsitektur 
\emph on
monolithic
\emph default
 adalah suatu arsitektur yang mengambarkan sebuah aplikasi yang menjalankan
 semua logika dalam satu 
\emph on
server
\emph default
 aplikasi.
 Aplikasi yang dibangun dengan arsitektur 
\emph on
monolitich
\emph default
 hanya dijalankan dengan menggunakan satu  
\emph on
server 
\emph default
aplikasi sehingga hanya memerlukan proses pemeliharaan aplikasi pada satu
 
\emph on
server
\emph default
 aplikasi.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "dragoni2017microservices"
literal "false"

\end_inset

, arsitektur 
\emph on
monolitich
\emph default
 adalah aplikasi perangkat lunak yang modulnya tidak dapat dijalankan secara
 independen.
 Dengan menggunakan arsitektur monolitich, setiap aplikasi dijalankan secara
 bersamaan dikarenakan seluruh modul - modul aplikasi terdapat di dalam
 sebuah aplikasi yang sangat besar.
 
\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "dragoni2017microservices"
literal "false"

\end_inset

, terdapat beberapa kekurangan dari arsitektur 
\emph on
monolitic
\emph default
 yaitu :
\end_layout

\begin_layout Itemize
Berukuran besar sehingga sangat sulit untuk melakukan pemeliharaan dan pengemban
gan aplikasi.
\end_layout

\begin_layout Itemize
Dapat terjadi konflik 
\emph on
dependency
\emph default
 
\emph on
library
\emph default
 saat proses penambahan modul baru.
\end_layout

\begin_layout Itemize
Setiap penambahan modul baru membutuhkan proses 
\emph on
restart
\emph default
 aplikasi.
\end_layout

\begin_layout Itemize
Munculnya konflik 
\emph on
code
\emph default
 pada saat dilakukan 
\emph on
deployment
\emph default
 aplikasi secara bersamaan.
\end_layout

\begin_layout Itemize
Arsitektur 
\emph on
monolitich
\emph default
 memiliki keterbatasan untuk dilakukan 
\emph on
scalability
\emph default
.
\end_layout

\begin_layout Itemize
Hanya menggunakan 1 teknologi untuk membuat aplikasi dengan menggunakan
 arsitektur 
\emph on
monolitich
\emph default
.
\end_layout

\begin_layout Section
Arsitektur Microservice
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "messinasimplified"
literal "false"

\end_inset

, arsitektur 
\emph on
microservice
\emph default
 adalah gaya arsitektur perangkat lunak yang memerlukan pemecahan aplikasi
 secara bisnis.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "ueda2016workload"
literal "false"

\end_inset

, arsitektur 
\emph on
microservice
\emph default
 adalah sebuah arsitektur baru dimana pengembangan aplikasi dilakukan dalam
 bentuk 
\emph on
web
\emph default
 
\emph on
service
\emph default
 kecil yang saling berkomunikasi satu sama lain.
\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "dragoni2017microservices"
literal "false"

\end_inset

, terdapat beberapa kelebihan dari arsitektur 
\emph on
microservice
\emph default
 yaitu :
\end_layout

\begin_layout Itemize
Arsitektur 
\emph on
microservice
\emph default
 membuat 
\emph on
code
\emph default
 lebih sedikit dan bersifat 
\emph on
independent
\emph default
 sehingga dapat dilakukan pengujian aplikasi secara 
\emph on
independent.
\end_layout

\begin_layout Itemize
Memudahkan pemeliharaan perangkat lunak.
\end_layout

\begin_layout Itemize
Dapat melakukan 
\emph on
deployment
\emph default
 secara deploment secara 
\emph on
independent
\emph default
.
\end_layout

\begin_layout Itemize
Mudahnya dalam melakukan 
\emph on
scalability.
\end_layout

\begin_layout Itemize
Developer dapat bebas dalam mengembangkan aplikasi dengan berbagai bahasa
 pemrograman dan framework.
\end_layout

\begin_layout Section

\emph on
Strangler
\emph default
 
\emph on
Pattern
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "de2016evolve"
literal "false"

\end_inset

, 
\emph on
Strangler
\emph default
 
\emph on
pattern
\emph default
 merupakan strategi yang digunakan untuk melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
.
 Dengan menggunakan strategi 
\emph on
strangker
\emph default
 
\emph on
pattern
\emph default
, 
\emph on
developer
\emph default
 dapat melakukan 
\emph on
refactoring
\emph default
 secara bertahap sehingga tidak akan menggangu aplikasi yang sedang berjalan.
 Strategi ini digunakan untuk melakukan 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 jika aplikasi yang telah berjalan menggunakan arsitektur 
\emph on
monolitich
\emph default
.
 Gambar 2.1 adalah proses 
\emph on
refactoring
\emph default
 aplikasi dengan arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/Strangler Pattern.png
	width 13cm
	height 8.58cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Strangler
\emph default
 
\emph on
Pattern
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cara kerja dari strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 adalah 
\end_layout

\begin_layout Enumerate
Tambahkan sebuah aplikasi 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 atau 
\emph on
proxy
\emph default
 
\emph on
server
\emph default
 yang berfungsi untuk mendistribusikan trafik yang masuk ke aplikasi diantara
 aplikasi dan 
\emph on
client
\emph default
.
\end_layout

\begin_layout Enumerate
Tambahkan 
\emph on
service
\emph default
 baru dengan arsitektur 
\emph on
microservice
\emph default
, dimana 
\emph on
service
\emph default
 ini adalah hasil 
\emph on
refactoring
\emph default
 dari aplikasi 
\emph on
monolitich
\emph default
.
 Misalnya 
\emph on
service
\emph default
 yang ditambahkan adalah 
\emph on
service
\emph default
 pembayaran.
\end_layout

\begin_layout Enumerate
Setiap ada trafik yang berhubungan dengan pembayaran maka aplikasi 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 atau 
\emph on
proxy
\emph default
 
\emph on
server
\emph default
 akan diarahkan ke 
\emph on
service
\emph default
 pembayaran sedangkan trafik yang lain nya akan diarahkan ke aplikasi 
\emph on
monlitich
\emph default
.
\end_layout

\begin_layout Standard
Strategi diatas akan dijalankan terus menerus hingga seluruh aplikasi dengan
 arsitektur 
\emph on
monolitich
\emph default
 telah berhasil dilakukan 
\emph on
refactoring
\emph default
 menjadi aplikasi dengan arsitektur 
\emph on
microservice.
\end_layout

\begin_layout Section

\emph on
Refactoring Microservice
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

, untuk melakukan proses refactoring dari arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 dibutuhkan 15 tahapan yaitu 
\end_layout

\begin_layout Enumerate

\emph on
Enable
\emph default
 
\emph on
the
\emph default
 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 yaitu membuat 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 yang berfungsi untuk melakukan proses otomatisasi terhadap kegiatan 
\emph on
build
\emph default
, 
\emph on
testing
\emph default
 dan laporan jika aplikasi yang dibangun masih terdapat kesalahan.
\end_layout

\begin_layout Enumerate

\emph on
Recover
\emph default
 
\emph on
the
\emph default
 
\emph on
Current
\emph default
 
\emph on
Architecture
\emph default
 yaitu mempelajari arsitektur yang sedang berjalan.
 Untuk melakukan proses recover the current architecture dibutuhkan 3 hal
 yaitu 
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Component
\emph default
 
\emph on
and
\emph default
 
\emph on
Service
\emph default
 
\emph on
Architecture
\emph default
, seluruh 
\emph on
team
\emph default
 
\emph on
development
\emph default
 harus mengetahui 
\emph on
component
\emph default
 dan 
\emph on
service
\emph default
 apa saja yang terdapat pada arsitektur yang sedang berjalan.
\end_layout

\begin_layout Itemize

\emph on
Technology
\emph default
 
\emph on
Architecture
\emph default
, seluruh 
\emph on
team
\emph default
 
\emph on
development
\emph default
 harus mengetahui teknologi apa saja yang digunakan pada arsitektur yang
 sedang berjalan.
\end_layout

\begin_layout Itemize

\emph on
Deployment
\emph default
 
\emph on
Architecture
\emph default
 
\emph on
and
\emph default
 
\emph on
Procedure
\emph default
, seluruh 
\emph on
team
\emph default
 
\emph on
development
\emph default
 harus mengetahui bagaimana proses 
\emph on
deployment
\emph default
 aplikasi pada arsitektur yang sedang berjalan.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Decompose
\emph default
 
\emph on
the
\emph default
 
\emph on
monolith
\emph default
 adalah proses pemecahan 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
monolitich
\emph default
 menjadi 
\emph on
service
\emph default
 
\emph on
microservice
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Decompose
\emph default
 
\emph on
the
\emph default
 
\emph on
Monolith
\emph default
 
\emph on
Based
\emph default
 
\emph on
on
\emph default
 
\emph on
Data
\emph default
 
\emph on
Ownership
\emph default
 adalah proses pemecahan 
\emph on
service
\emph default
 berdasarkan data 
\emph on
ownership
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Change Code Dependency to Service Call
\emph default
 adalah semua 
\emph on
code dependency
\emph default
 atau pemanggilan fungsi diubah menjadi pemanggilan service melalui API.
\end_layout

\begin_layout Enumerate

\emph on
Introduce Service Discovery
\emph default
 adalah berfungsi untuk membuat 
\emph on
service discovery.
\end_layout

\begin_layout Enumerate

\emph on
Introduce Service Discovery Client
\emph default
 adalah berfungsi untuk membuat 
\emph on
service discovery
\emph default
 
\emph on
client
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Introduce Internal Load Balancer
\emph default
 adalah berfungsi untuk membuat 
\emph on
internal load balancer.
\end_layout

\begin_layout Enumerate

\emph on
Introduce External Load Balancer
\emph default
 adalah berfungsi untuk membuat 
\emph on
external load balancer.
\end_layout

\begin_layout Enumerate

\emph on
Introduce
\emph default
 
\emph on
Circuit
\emph default
 
\emph on
Breaker
\emph default
 adalah penambahan fungsi 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 di setiap 
\emph on
service
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Introduce Configuration Server 
\emph default
adalah penambahan 
\emph on
service
\emph default
 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 yang berfungsi untuk sebagai 
\emph on
central
\emph default
 
\emph on
configuration
\emph default
 untuk seluruh 
\emph on
service
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Introduce Edge Server (API Gateway)
\emph default
 adalah penambahan 
\emph on
service edge server (API gateway)
\emph default
 yang berfungsi untuk menyembunyikan struktur dari 
\emph on
service
\emph default
 
\emph on
microservice
\emph default
 dan memonitor status dan penggunaan 
\emph on
service
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Containerize the Services
\emph default
 adalah penggunaan 
\emph on
container
\emph default
 untuk masing - masing 
\emph on
service
\emph default
 sehingga dapat mempermudah 
\emph on
developer
\emph default
 dalam melakukan 
\emph on
deployment
\emph default
 secara 
\emph on
independent
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Deploy into a Cluster and Orchestrate Containers
\emph default
 adalah penggunaan 
\emph on
orchestrate
\emph default
 
\emph on
containers
\emph default
 untuk mengurangi proses 
\emph on
deployment
\emph default
 
\emph on
service
\emph default
 pada 
\emph on
container
\emph default
 secara manual.
\end_layout

\begin_layout Enumerate

\emph on
Monitor the System and Provide Feedback
\emph default
 adalah melakukan monitoring terhadap 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 yang sedang berjalan.
\end_layout

\begin_layout Section

\emph on
Refactoring Database
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "messinasimplified"
literal "false"

\end_inset

, terdapat 3 pola database yang dapat digunakan pada arsitektur 
\emph on
microservice
\emph default
 yaitu :
\end_layout

\begin_layout Itemize
Private-tables-per-service yaitu semua 
\emph on
service
\emph default
 menggunakan database yang sama, akan tetapi setiap 
\emph on
service
\emph default
 hanya dapat mengakses tabel yang telah ditentukan.
\end_layout

\begin_layout Itemize
Schema-per-service yaitu semua 
\emph on
service
\emph default
 memiliki database masing - masing akan tetapi database tersebut berada
 pada 1 
\emph on
node
\emph default
 
\emph on
database
\emph default
 
\emph on
server
\emph default
.
\end_layout

\begin_layout Itemize
Database-server-per-service yaitu semua service memiliki database masing
 - masing dan berada pada masing - masing 
\emph on
node
\emph default
 
\emph on
database
\emph default
 
\emph on
server
\emph default
.
\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "MigratingtoMicroservice"
literal "false"

\end_inset

, Untuk memecah database monolitich menjadi database berbasis 
\emph on
distributed
\emph default
 dapat menggunakan 4 skenario yaitu :
\end_layout

\begin_layout Itemize
Add a Column Migration yaitu membuat database baru untuk keperluan 
\emph on
migration
\emph default
 
\emph on
database
\emph default
.
\end_layout

\begin_layout Itemize
Rename a Column Migration yaitu merubah beberapa column untuk keperluan
 
\emph on
migration
\emph default
 
\emph on
database
\emph default
.
\end_layout

\begin_layout Itemize
Change Type/Format of a Column Migration yaitu merubah beberapa tipe 
\emph on
column
\emph default
 untuk keperluan 
\emph on
migration
\emph default
 
\emph on
database
\emph default
.
\end_layout

\begin_layout Itemize
Delete a Column Migration yaitu menghapus 
\emph on
column
\emph default
 yang sudah tidak digunakan.
\end_layout

\begin_layout Section

\emph on
Service Discovery
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "de2016evolve"
literal "false"

\end_inset

,
\emph on
 service discovery
\emph default
 berfungsi untuk mendaftarkan semua 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
microservice 
\emph default
secara
\emph on
 
\emph default
otomatis.
 Setiap 
\emph on
service
\emph default
 yang telah terdaftar di 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 secara periodik mengirimkan status 
\emph on
service
\emph default
, sehingga 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 dapat mengetahui apakah sebuah 
\emph on
service
\emph default
 dalam keadaan hidup atau mati.
 Berikut adalah proses yang dilakukan pada saat proses registrasi 
\emph on
service
\emph default
 dan mengirim status di setiap 
\emph on
service
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Service
\emph default
 
\emph on
discovery
\emph default
 dijalankan.
\end_layout

\begin_layout Enumerate
Semua 
\emph on
Service
\emph default
 dijalankan.
 Pada saat dijalankan, masing - masing 
\emph on
service
\emph default
 melakukan registrasi 
\emph on
service
\emph default
 pada 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
.
\end_layout

\begin_layout Enumerate
Semua 
\emph on
service
\emph default
 yang telah terdaftar pada 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 akan mengirimkan status 
\emph on
service
\emph default
.
\end_layout

\begin_layout Section

\emph on
Load Balancer
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Load
\emph default
 
\emph on
balancer
\emph default
 merupakan salah satu mekanisme untuk mendistribusikan beban kerja secara
 merata kepada beberapa 
\emph on
node
\emph default
 
\emph on
server
\emph default
 yang bekerja 
\begin_inset CommandInset citation
LatexCommand cite
key "rosalia2016implementasi"
literal "false"

\end_inset

.
 Penggunaan 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 dapat meminimalkan 
\emph on
response
\emph default
 
\emph on
time
\emph default
, mengurangi beban di satu 
\emph on
node
\emph default
 
\emph on
server
\emph default
 yang bekerja dan mengoptimalkan penggunaan beberapa 
\emph on
node
\emph default
 
\emph on
server
\emph default
.
 Beberapa contoh dari 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 adalah nginx dan HAProxy yang sering digunakan sebagai 
\emph on
software
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
.
\end_layout

\begin_layout Section

\emph on
Circuit Breaker
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Circuit breaker
\emph default
 akan melakukan pengecekan pada saat 
\emph on
service
\emph default
 melakukan 
\emph on
request
\emph default
 ke 
\emph on
service
\emph default
 yang lainnya 
\begin_inset CommandInset citation
LatexCommand cite
key "daya2016microservices"
literal "false"

\end_inset

.
 
\emph on
Circuit breaker
\emph default
 digunakan untuk memastikan jika terjadi kegagalan pada suatu 
\emph on
service
\emph default
 maka 
\emph on
service
\emph default
 yang lain tidak akan terganggu.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "article"
literal "false"

\end_inset

, di dalam 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 terdapat 3 state yaitu 
\emph on
closed
\emph default
, 
\emph on
open
\emph default
 dan 
\emph on
half-open
\emph default
.
 Adapun cara kerja dari 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 adalah
\end_layout

\begin_layout Enumerate
Jika tidak terjadi kegagalan pada saat 
\emph on
request
\emph default
 maka 
\emph on
circuit breaker
\emph default
 akan berada pada 
\emph on
state
\emph default
 
\emph on
closed
\emph default
, dimana 
\emph on
service
\emph default
 dapat mengembalikan 
\emph on
response
\emph default
.
 Gambar 2.2 adalah 
\emph on
circuit breaker
\emph default
 dalam keadaan 
\emph on
closed
\emph default
.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Circuit Breaker Closed.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
circuit breaker closed
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Jika terjadi kegagalan dalam pemanggilan 
\emph on
service
\emph default
 maka 
\emph on
circuit breaker
\emph default
 akan pindah ke 
\emph on
state
\emph default
 
\emph on
open
\emph default
, dimana pada 
\emph on
state
\emph default
 
\emph on
open
\emph default
 ini terdapat 
\emph on
fallback
\emph default
 yang langsung mengembalikan 
\emph on
response
\emph default
 
\emph on
error
\emph default
 sehingga 
\emph on
service
\emph default
 yang melakukan 
\emph on
request
\emph default
 mengetahui bahwa 
\emph on
service
\emph default
 yang sedang dipanggil dalam keadaan 
\emph on
error
\emph default
.
 Gambar 2.3 adalah 
\emph on
circuit breaker
\emph default
 dalam keadaan 
\emph on
open
\emph default
.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Circuit Breaker Closed.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
circuit breaker open
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Jika 
\emph on
circuit breaker
\emph default
 berada pada 
\emph on
state
\emph default
 
\emph on
open
\emph default
, maka 
\emph on
circuit breaker
\emph default
 akan melakukan pengecekan secara periodik pada 
\emph on
service
\emph default
 tersebut.
 Jika 
\emph on
circuit breaker
\emph default
 melakukan pengecekan ini, maka 
\emph on
circuit breaker
\emph default
 sedang berada pada 
\emph on
state
\emph default
 
\emph on
half-open
\emph default
.
 Apabila pada saat melakukan pengecekan dan 
\emph on
service
\emph default
 mengembalikan 
\emph on
response
\emph default
 
\emph on
timeout
\emph default
 maka 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 akan berubah menjadi 
\emph on
state
\emph default
 
\emph on
open
\emph default
, sedangkan apabila 
\emph on
service
\emph default
 mengembalikan 
\emph on
response
\emph default
 sukses maka 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 akan berubah menjadi 
\emph on
state
\emph default
 
\emph on
closed
\emph default
.
 Gambar 2.4 adalah 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 dalam keadaan 
\emph on
half-open
\emph default
.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Circuit Breaker Half-Open.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
circuit breaker half-open
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section

\emph on
Configuration Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Permasalahan yang muncul pada saat melakukan 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah bagaimana jika terdapat konfigurasi yang berubah tanpa perlu melakukan
 
\emph on
restart
\emph default
 
\emph on
service
\emph default
, sehingga 
\emph on
service
\emph default
 tetap berjalan dengan konfigurasi yang diubah tanpa melakukan 
\emph on
restart
\emph default
 
\emph on
service
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

, untuk menyelesaikan permasalahan ini maka dibutuhkan sebuah 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 yang berfungsi untuk menyimpan semua konfigurasi 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 yang terdapat pada 
\emph on
microservice
\emph default
.
\end_layout

\begin_layout Standard
Setiap 
\emph on
service
\emph default
 yang berjalan akan melakukan 
\emph on
request
\emph default
 konfigurasi kepada 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
, lalu 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 memberikan konfigurasi sesuai dengan permintaan 
\emph on
service
\emph default
 tersebut.
 Adapun proses yang akan dilakukan 
\emph on
service
\emph default
 pada saat melakukan 
\emph on
request
\emph default
 konfigurasi kepada 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 adalah sebagai berikut
\end_layout

\begin_layout Enumerate

\emph on
Configuration
\emph default
 
\emph on
server
\emph default
 dijalankan.
\end_layout

\begin_layout Enumerate

\emph on
Configuration
\emph default
 
\emph on
server
\emph default
 melakukan 
\emph on
clone
\emph default
 
\emph on
repository
\emph default
 konfigurasi yang terdapat pada gitlab.
\end_layout

\begin_layout Enumerate

\emph on
Service
\emph default
 akan dijalankan.
\end_layout

\begin_layout Enumerate

\emph on
Service
\emph default
 melakukan registrasi pada 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Service
\emph default
 melakukan 
\emph on
lookup
\emph default
 
\emph on
configuraton
\emph default
 
\emph on
server
\emph default
 untuk menemukan IP dan port dari 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Service
\emph default
 melakukan 
\emph on
request
\emph default
 konfigurasi kepada 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 berdasarkan nama 
\emph on
service
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Configuration
\emph default
 
\emph on
server
\emph default
 mengirimkan konfigurasi kepada 
\emph on
service
\emph default
 berdasarkan nama 
\emph on
service
\emph default
.
\end_layout

\begin_layout Section

\emph on
Edge Server
\emph default
 (API
\emph on
 Gateway
\emph default
)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "article"
literal "false"

\end_inset

, 
\emph on
edge server
\emph default
 (API 
\emph on
gateway
\emph default
) adalah sebuah 
\emph on
service
\emph default
 yang menyediakan akses ke banyak API dimana 
\emph on
service
\emph default
 ini menyediakan fungsi untuk mempubliskasikan API dan dapat memberikan
 hak akses yang berbeda kepada setiap 
\emph on
client
\emph default
.
 Edge server (API 
\emph on
Gateway
\emph default
) juga berfungsi untuk menyembunyikan struktur dari 
\emph on
service
\emph default
 
\emph on
microservice
\emph default
 dan memonitor status dan penggunaan 
\emph on
service
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

.
 Terdapat beberapa contoh dari edge server (API Gateway) diantaranya adalah
 spring cloud zuul, axway API 
\emph on
gateway
\emph default
, kong API 
\emph on
gateway
\emph default
 dan 3Scale API 
\emph on
gateway
\emph default
.
\end_layout

\begin_layout Section
Docker
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "fink2014docker"
literal "false"

\end_inset

, docker adalah salah satu metode alternatif baru untuk virtualisasi untuk
 linux.
 Docker lebih ringan dibandingkan dengan teknik virtulisasi yang tradisional
 seperti VMWare dan virtualbox.
 Docker juga menawarkan segudang fitur seperti 
\emph on
commit
\emph default
, 
\emph on
tag
\emph default
 dan dapat digunakan pada laptop maupun infrastruktur 
\emph on
cloud
\emph default
.
 Docker dapat menyediakan infrastruktur yang berisi semua elemen seperti
 tool dan 
\emph on
library
\emph default
 dari sebuah sistem operasi yang diperlukan untuk menjalankan aplikasi 
\begin_inset CommandInset citation
LatexCommand cite
key "microservicesbestpracticesforjava"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Docker dapat membantu para 
\emph on
developer
\emph default
 untuk mengatasi permasalahan 
\emph on
environment
\emph default
.
 
\emph on
Developer
\emph default
 dapat menggunakan docker untuk menciptakan 
\emph on
environment
\emph default
 
\emph on
development
\emph default
 sama seperti 
\emph on
environment
\emph default
 pada 
\emph on
production
\emph default
 sehingga 
\emph on
environment
\emph default
 yang digunakan sama seperti 
\emph on
environment
\emph default
 target.
 Untuk dapat menciptakan 
\emph on
environment
\emph default
 yang sama seperti production maka digunakan docker 
\emph on
image
\emph default
.
 Docker 
\emph on
image
\emph default
 merupakan artefak yang tidak dapat diubah dan docker 
\emph on
image
\emph default
 dapat dibuat berdasarkan kebutuhan dari masing - masing aplikasi 
\begin_inset CommandInset citation
LatexCommand cite
key "microservicesbestpracticesforjava"
literal "false"

\end_inset

.
 Dengan menggunakan docker 
\emph on
image
\emph default
, 
\emph on
developer
\emph default
 dapat berpindah dari satu 
\emph on
environment
\emph default
 ke 
\emph on
environment
\emph default
 yang lain dan docker 
\emph on
image
\emph default
 dapat didistribusikan atau 
\emph on
repository
\emph default
, contoh dari 
\emph on
repository
\emph default
 docker 
\emph on
image
\emph default
 adalah docker hub.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "shu2017study"
literal "false"

\end_inset

, docker hub adalah layanan 
\emph on
cloud
\emph default
 
\emph on
registry
\emph default
 untuk 
\emph on
sharing
\emph default
 
\emph on
image
\emph default
 sebuah aplikasi.
\end_layout

\begin_layout Section
Kajian Penelitian
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beberapa penelitian terdahulu telah melakukan penelitian terkait proses
 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
.
 Berikut ringkasan kajian terdahulu yang mengimplementasikan penelitian
 serupa.
\end_layout

\begin_layout Standard
\align left
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ringkasan Kajian Penelitian
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0.6cm">
<column alignment="center" valignment="top" width="1.1cm">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="3cm">
<column alignment="center" valignment="top" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tahun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Peneliti
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Metode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hasil
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alessandra Levcovitz, Ricardo Terra, Marco Tulio Valente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
metode yang digunakan adalah metode yang diusulkan oleh peneliti 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
metode yang diusulkan oleh peneliti berhasil diterapkan di sistem bank 750
 KLOC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Armin Balalaie, Abbas Heydarnoori, Pooyan Jamshidi, Damian A.
 Tamburri, Theo Lynn
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
metode yang digunakan adalah metode yang diusulkan oleh peneliti yaitu 15
 langkah 
\emph on
microservices
\emph default
 
\emph on
migration
\emph default
 
\emph on
patterns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
metode yang diusulkan oleh peneliti berhasil digunakan untuk melakukan proses
 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 di 3 studi kasus
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2017
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hatma Suryotrisongko
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 langkah 
\emph on
microservices
\emph default
 
\emph on
migration
\emph default
 
\emph on
patterns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Penelitian ini berhasil menunjukkan implementasi 
\emph on
microservice
\emph default
 untuk studi kasus sistem manajemen asosiasi/keanggotaan yang digunakan
 untuk membuktikan adopsi model 
\emph on
Microservices
\emph default
 
\emph on
Migration
\emph default
 
\emph on
Patterns
\emph default
, lalu mengevaluasi model tersebut pada implementasi di Asosiasi Sistem
 Informasi Indonesia (AISINDO).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
METODOLOGI PENELITIAN
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Section
Analisa Masalah
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aplikasi absensi PT Graha Usaha Teknik adalah sebuah aplikasi absensi yang
 dibangun dengan menggunakan arsitektur 
\emph on
monolitich
\emph default
.
 Aplikasi absensi PT Graha Usaha Teknik digunakan sebagai laporan perhitungan
 jam masuk dan pulang karyawan pada perusahaan tersebut.
 Bertambahnya karyawan dan berkembangnya PT Graha Usaha Teknik merupakan
 sebuah masalah terhadap meningkatnya trafik aplikasi.
 Bertambahnya trafik penggunaan aplikasi absensi PT Graha Usaha Teknik maka
 proses pemeliharaan aplikasi semakin sulit, kinerja aplikasi semakin menurun,
 dan proses pembaruan aplikasi yang semakin sulit.
 Permasalahan yang terjadi pada aplikasi absensi PT Graha Usaha Teknik yaitu
 jika terjadi kegagalan sistem pada saat proses perbaikan atau pembaruan
 fitur pada aplikasi tersebut maka semua fitur pada aplikasi tidak dapat
 digunakan.
 Fitur aplikasi tersebut tidak dapat digunakan dalam jangka waktu tertentu.
 Proses pembaruan ini sering mengalami permasalahan seperti aplikasi menjadi
 lambat, aplikasi memunculkan kesalahan sistem, dan aplikasi tidak bisa
 diakses ketika proses pembaruan jika dilakukan pada saat tingginya trafik
 aplikasi.
 Dengan adanya permasalahan tersebut, dibutuhkan proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 pada aplikasi absensi PT Graha Usaha Teknik.
 Proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice
\emph default
 yang dilakukan pada penelitian menggunakan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 dan 15 langkah sesuai dengan saran dari para peneliti pada penelitian 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

 untuk menyelesaikan permasalahan aplikasi absensi pada PT Graha Usaha Teknik.
\end_layout

\begin_layout Section
Pengumpulan Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Teknik pengumpulan data yang dilakukan pada penelitian ini dengan observasi.
 Observasi dilakukan dengan melakukan wawancara langsung pada pihak PT.
 Graha Usaha teknik.
 Pengumpulan data ini dilakukan untuk kebutuhan perancangan dan simulasi
 pada penelitian ini.
 Data yang digunakan pada penelitian ini adalah 
\emph on
data
\emph default
 
\emph on
primer
\emph default
 yang terdiri dari
\end_layout

\begin_layout Enumerate
Data karyawan
\end_layout

\begin_layout Enumerate
Data posisi karyawan
\end_layout

\begin_layout Enumerate
Data ketetapan waktu kerja karyawan
\end_layout

\begin_layout Enumerate
Data APD (alat pelindung diri)
\end_layout

\begin_layout Section
Menganalisa Arsitektur Yang Sedang Berjalan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tahapan penelitian yang digunakan untuk memulai proses refactoring arsitektur
 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice 
\emph default
adalah melakukan analisa terhadap arsitektur aplikasi yang sedang digunakan.
 Proses analisa ini bertujuan untuk mengetahui 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
, penggunaan teknologi dan tahapan proses mendistribusikan aplikasi ke 
\emph on
server
\emph default
.
 Proses analisa arsitektur yang sedang berjalan terdiri dari 3 tahapan
\end_layout

\begin_layout Enumerate
Analisa arsitektur service yang sedang berjalan.
 
\end_layout

\begin_deeper
\begin_layout Standard
Tahapan analisa arsitektur 
\emph on
service
\emph default
 bertujuan untuk menganalisa dan mencatat 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 yang sedang berjalan.
 Hasil dari proses analisa arsitektur 
\emph on
service
\emph default
 yaitu dibuatkan sebuah diagram arsitektur 
\emph on
service
\emph default
 yang memuat informasi daftar 
\emph on
service
\emph default
 untuk mempermudah proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice.
\end_layout

\end_deeper
\begin_layout Enumerate
Analisa arsitektur teknologi yang sedang berjalan.
\end_layout

\begin_deeper
\begin_layout Standard
Tahapan analisa arsitektur teknologi bertujuan untuk menganalisa penggunaan
 teknologi pada aplikasi yang sedang berjalan, dengan adanya proses analisa
 arsitektur teknologi pada aplikasi yang berjalan maka tim pengembang dapat
 menentukan teknologi yang akan digunakan pada arsitektur 
\emph on
microservice
\emph default
.
 Pada analisa arsitektur teknologi ini, informasi mengenai teknologi yang
 sedang berjalan diuraikan ke dalam sebuah tabel.
\end_layout

\end_deeper
\begin_layout Enumerate
Analisa arsitektur prosedur mendistribusikan aplikasi ke 
\emph on
server
\emph default
.
\end_layout

\begin_deeper
\begin_layout Standard
Tahapan analisa arsitektur prosedur mendistribusikan aplikasi ke 
\emph on
server
\emph default
 bertujuan untuk mengetahui langkah - langkah yang dilakukan saat proses
 mendistribusikan aplikasi.
 Setiap aplikasi yang dikembangkan memiliki masing - masing prosedur pada
 saat proses mendistribusikan aplikasi ke 
\emph on
server
\emph default
 sehingga proses analisa ini dapat berfungsi membantu tim pengembang dalam
 melakukan proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice.
\end_layout

\end_deeper
\begin_layout Section
Memecah Arsitektur 
\emph on
Monolitich
\emph default
 Berdasarkan Proses Bisnis
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proses pemecahan arsitektur 
\emph on
monolitich
\emph default
 dilakukan berdasarkan proses bisnis yang sedang digunakan.
 Setiap proses bisnis yang terdapat pada arsitektur 
\emph on
monolitich
\emph default
 yang sedang berjalan dapat mewakili 1 
\emph on
service
\emph default
 yang akan dipecah, akan tetapi 1 proses bisnis juga dapat dikembangkan
 menjadi 2 
\emph on
service
\emph default
 jika proses bisnis tersebut saling berkaitan.
 Pemecahan arsitektur 
\emph on
monolitich
\emph default
 berdasarkan proses bisnis menggunakan data 
\emph on
service
\emph default
 yang telah dilakukan pada tahap sebelumnya.
 Proses pemecahan arsitektur 
\emph on
monolitich
\emph default
 ini bertujuan untuk mengetahui proses bisnis yang terdapat di dalam aplikasi
 yang sedang berjalan dan mengetahui proses bisnis yang saling berhubungan
 dan ketergantungan antar sesama proses bisnis.
 Hasil dari pemecahan arsitektur 
\emph on
monolitich
\emph default
 berdasarkan proses bisnis menghasilkan sebuah diagram proses bisnis yang
 berfungsi untuk mempermudah proses 
\emph on
refactoring
\emph default
 arsitektur 
\emph on
monolithic
\emph default
 menjadi arsitektur 
\emph on
microservice.
\end_layout

\begin_layout Section
Memecah Arsitektur 
\emph on
Monolitich
\emph default
 Berdasarkan kepemilikan Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tahap pemecahan arsitektur 
\emph on
monolitich
\emph default
 berdasarkan kepemilikan data bertujuan untuk mengetahui kepemilikan data
 dari masing - masing proses bisnis.
 proses pemecahan arsitektur 
\emph on
monolitich
\emph default
 berdasarkan kepemilikan data dilakukan dengan memetakan proses bisnis dengan
 tabel yang terdapat di dalam 
\emph on
database
\emph default
.
 Proses pemetaan dilakukan dengan mengumpulkan informasi mengenai proses
 bisnis dan tabel yang terdapat di dalam 
\emph on
database
\emph default
.
 Informasi mengenai proses bisnis telah dilakukan pada tahap sebelumnya
 yaitu melakukan proses memecah arsitektur 
\emph on
monolitich
\emph default
 berdasarkan proses bisnis sehingga menghasilkan mengenai informasi dari
 seluruh proses bisnis.
 Seluruh informasi mengenai proses bisnis dan tabel direpresentasikan ke
 dalam sebuah diagram pemetaan, lalu dilakukan proses pemetaan dari proses
 bisnis ke tabel sehingga menghasilkan sebuah diagram pemetaan yang berfungsi
 untuk mendeskripsikan pemetaan proses bisnis ke masing - masing tabel yang
 terdapat di dalam database.
\end_layout

\begin_layout Section
Membuat 
\emph on
Continuous
\emph default
 
\emph on
Integration
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Untuk dapat menampung kode dari aplikasi yang dikembangkan oleh tim pengembang
 dibutuhkan sebuah tempat penyimpanan kode aplikasi serta dibutuhkan proses
 pencatatan perubahan yang dilakukan oleh tim pengembang.
 Tempat penyimpanan kode aplikasi yang digunakan pada penelitian ini adalah
 
\emph on
gitlab
\emph default
.
 
\emph on
Gitlab
\emph default
 menyediakan fitur untuk menyimpan kode aplikasi, melakukan proses pencatatat
 jika terjadi perubahan pada kode aplikasi serta mendukung proses 
\emph on
continuous
\emph default
 
\emph on
integration.
 
\emph default
Proses 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 pada penelitian ini menggunakan fitur dari 
\emph on
gitlab
\emph default
 sehingga proses pembuatan artifak dan test aplikasi dilakukan menggunakan
 fitur 
\emph on
gitlab
\emph default
 
\emph on
runner
\emph default
 yang terdapat pada 
\emph on
gitlab
\emph default
.
 Untuk mendukung proses 
\emph on
continuous
\emph default
 
\emph on
integration 
\emph default
di setiap 
\emph on
service
\emph default
, maka dibuatkan tempat penyimpanan kode aplikasi untuk masing - masing
 
\emph on
service
\emph default
 yang telah dipecah pada tahapan sebelumnya.
 Pemisahan tempat penyimpanan untuk masing - masing service bertujuan untuk
 mengurangi kesalahan pada saat proses 
\emph on
continuous
\emph default
 
\emph on
integration 
\emph default
dijalankan dan masing - masing proses 
\emph on
continuous
\emph default
 
\emph on
integration 
\emph default
dapat dijalankan secara bersamaan tanpa menggangu proses 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 lain yang sedang berjalan.
\end_layout

\begin_layout Section
Mengubah Ketergantungan Kode Dengan Pemanggilan 
\emph on
Service
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tahap selanjutnya yaitu mengubah ketergantungan kode dengan proses pemanggilan
 
\emph on
service
\emph default
.
 Berdasarkan proses pemecahan arsitektur 
\emph on
monolitich
\emph default
 berdasarkan proses bisnis dan kepemilikan data maka didapatkan informasi
 mengenai ketergantungan data antara 1 
\emph on
service
\emph default
 dengan 
\emph on
service
\emph default
 yang lain.
 Jika menggunakan arsitektur 
\emph on
monolitich
\emph default
, ketergantungan data dapat diselesaikan dengan membuat kode program yang
 berfungsi untuk memanggil kode program lain sebagai penyedia data, sedangkan
 jika menggunakan arsitektur 
\emph on
microservice
\emph default
, maka proses pemanggilan kode tersebut harus diubah menjadi pemanggilan
 
\emph on
service
\emph default
.
 Proses pemanggilan 
\emph on
service
\emph default
 dilakukan dengan menggunakan fungsi API (
\emph on
application
\emph default
 
\emph on
programming
\emph default
 
\emph on
interface
\emph default
), dimana 
\emph on
service
\emph default
 tersebut menyediakan data dalam bentuk API sehingga proses ketergantungan
 kode atau pemanggilan kode program dapat digantikan dengan pemanggilan
 
\emph on
service
\emph default
.
 Pada penelitian ini, hasil dari proses mengubah ketergantungan kode dengan
 pemanggilan 
\emph on
service
\emph default
 digambarkan di dalam sebuah diagram.
\end_layout

\begin_layout Section
Membuat
\emph on
 Service Discovery Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Setiap 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
microservice
\emph default
 dijalankan secara terpisah pada sebuah 
\emph on
virtual
\emph default
 
\emph on
server
\emph default
 maupun 
\emph on
container
\emph default
, setiap 1 
\emph on
virtual
\emph default
 
\emph on
server
\emph default
 atau 
\emph on
container
\emph default
 mewakili dari 1 
\emph on
instance
\emph default
 
\emph on
service
\emph default
 yang berjalan.
 Setiap 
\emph on
service
\emph default
 yang dikembangkan di dalam arsitektur microservice dapat dijalankan lebih
 dari 1 
\emph on
instance
\emph default
, misalnya 
\emph on
service
\emph default
 catalog barang dapat dijalankan dengan 2 
\emph on
instance
\emph default
 dimana kedua 
\emph on
instance
\emph default
 tersebut berisi 
\emph on
service
\emph default
 dengan fungsi yang sama.
 Penambahan atau pengurangan 
\emph on
instance
\emph default
 dapat dilakukan ketika aplikasi akan didistribusikan ke server maupun aplikasi
 sedang berjalan.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "taibi2018architectural"
literal "false"

\end_inset

, penambahan atau pengurangan 
\emph on
instance
\emph default
 yang bergerak secara dinamik mengharuskan setiap 
\emph on
service
\emph default
 dapat berkomunikasi dengan 
\emph on
service
\emph default
 lain secara dinamik.
 Proses komunikasi antar service secara dinamik tersebut dapat diselesaikan
 dengan menggunakan
\emph on
 service
\emph default
 
\emph on
discovery server
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

.
 Semua 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
microservice
\emph default
 didaftarkan secara otomatis pada 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
server
\emph default
, pada saat melakukan komunikasi ke antar 
\emph on
service
\emph default
, 
\emph on
service
\emph default
 yang bertindak sebagai 
\emph on
client
\emph default
 terlebih dahulu melakukan proses pengecekan 
\emph on
IP
\emph default
 dan 
\emph on
port
\emph default
 
\emph on
service
\emph default
 yang dituju.
 Setelah mendapatkan 
\emph on
IP
\emph default
 dan 
\emph on
port
\emph default
 
\emph on
service
\emph default
 yang dituju, maka 
\emph on
service
\emph default
 yang bertindak sebagai 
\emph on
client
\emph default
 mulai melakukan komunikasi ke 
\emph on
service
\emph default
 yang dituju.
 Pada penelitian ini, 
\emph on
eureka
\emph default
 digunakan sebagai 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
server
\emph default
 dan untuk mempermudah tim pengembang maka informasi 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
server
\emph default
 digambarkan di dalam sebuah diagram.
 Proses membuat service discovery server dilakukan dengan membuat 
\end_layout

\begin_layout Section
Membuat 
\emph on
Service Discovery
\emph default
 Untuk 
\emph on
Client
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Setelah dilakukan proses pembuatan 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
server
\emph default
, tahapan selanjutnya untuk proses refactoring arsitektur monolitich menjadi
 arsitektur microservice adalah membuat 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 untuk 
\emph on
client
\emph default
.
 Proses membuat 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 untuk 
\emph on
client
\emph default
 bertujuan agar setiap 
\emph on
service
\emph default
 dapat mengirimkan status 
\emph on
service
\emph default
 secara periodik kepada 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
server
\emph default
.
 Status yang dikirim dari masing - masing 
\emph on
service
\emph default
 kepada 
\emph on
service
\emph default
 
\emph on
discovery server
\emph default
 adalah status dalam keadaan 
\emph on
service
\emph default
 berjalan, jika 
\emph on
service
\emph default
 tidak mengirimkan status dalam jangka waktu tertentu maka 
\emph on
service
\emph default
 
\emph on
discovery server
\emph default
 akan menghapus 
\emph on
service
\emph default
 tersebut dari informasi 
\emph on
service
\emph default
 yang sedang berjalan.
 Jika terdapat 
\emph on
service
\emph default
 dalam keadaan mati maka 
\emph on
service
\emph default
 
\emph on
discovery server
\emph default
 tidak memunculkan 
\emph on
service
\emph default
 tersebut sehingga tim pengembang dapat mengetahui status dari masing -
 masing 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
microservice
\emph default
.
 Di dalam penelitian ini, 
\emph on
eureka
\emph default
 digunakan sebagai 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
client
\emph default
 yang digunakan pada masing - masing 
\emph on
service
\emph default
 yang berfungsi untuk mengirim status 
\emph on
service
\emph default
 ke 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
server
\emph default
 dan untuk mempermudah tim pengembang maka informasi 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
client
\emph default
 digambarkan di dalam sebuah diagram.
\end_layout

\begin_layout Section
Membuat 
\emph on
Internal
\emph default
 
\emph on
Load
\emph default
 
\emph on
Balancer
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Service
\emph default
 yang terdapat di dalam sebuah arsitektur 
\emph on
microservice
\emph default
 dapat dijalankan lebih dari 1 
\emph on
instance
\emph default
, artinya 1 
\emph on
service
\emph default
 dengan fungsi yang sama dapat dijalankan pada banyak 
\emph on
instance
\emph default
.
 Banyaknya 
\emph on
service
\emph default
 yang dapat dijalankan pada banyak 
\emph on
instance
\emph default
 disebut sebagai 
\emph on
server
\emph default
 
\emph on
clustering
\emph default
.
 Menurut a, 
\emph on
server
\emph default
 
\emph on
clustering
\emph default
 adalah suatu teknologi yang menggabungkan beberapa 
\emph on
server
\emph default
 yang bekerja bersama-sama yang seolah - olah merupakan satu sistem tunggal.
 Dengan adanya 
\emph on
server
\emph default
 
\emph on
clustering
\emph default
, dibutuhkan sebuah 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 yang dapat membagi beban trafik kepada banyak 
\emph on
instance
\emph default
 pada 
\emph on
server
\emph default
 
\emph on
clustering
\emph default
 tersebut.
 Teknologi 
\emph on
ribbon
\emph default
 digunakan sebagai 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 pada penelitian ini, dimana teknologi tersebut digunakan untuk membagi
 beban trafik jika terdapat 1 
\emph on
service
\emph default
 yang dijalankan dengan menggunakan banyak 
\emph on
instance
\emph default
.
 Untuk mempermudah tim pengembang maka informasi 
\emph on
internal load balancer 
\emph default
digambarkan di dalam sebuah diagram.
\end_layout

\begin_layout Section
Membuat 
\emph on
Circuit
\emph default
 
\emph on
Breaker
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Menurut b, setiap 
\emph on
service
\emph default
 yang bertindak sebagai 
\emph on
client
\emph default
 diharuskan menggunakan 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
.
 Penggunaan 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 pada masing - masing 
\emph on
service
\emph default
 yang bertindak sebagai 
\emph on
client
\emph default
 berfungsi untuk mengurangi kegagalan sistem jika 
\emph on
service
\emph default
 yang akan diakses dalam keadaan mati.
 Teknologi 
\emph on
hystrix
\emph default
 digunakan sebagai circuit breaker pada penelitian ini.
 Teknologi hystrix mencatat setiap balasan yang dikembalikan oleh setiap
 
\emph on
service
\emph default
, jika 
\emph on
service
\emph default
 tersebut tidak memberikan balasan maka 
\emph on
hystrix
\emph default
 akan mengenali 
\emph on
service
\emph default
 tersebut dalam keadaan sibuk atau mati, sehingga 
\emph on
hystrix
\emph default
 akan melakukan proses pengecekan 
\emph on
service
\emph default
 tersebut dalam waktu tertentu untuk memastikan bahwa 
\emph on
service
\emph default
 telah berjalan normal.
\end_layout

\begin_layout Section
Membuat Konfigurasi 
\emph on
Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Banyaknya 
\emph on
service
\emph default
 pada arsitektur 
\emph on
microservice
\emph default
 memunculnya sebuah permasalahan dengan banyaknya konfigurasi dari masing
 - masing 
\emph on
service
\emph default
.
 Jika terjadi perubahan konfigurasi pada sebuah 
\emph on
service
\emph default
 maka 
\emph on
service
\emph default
 tersebut diharuskan melakukan 
\emph on
restart
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

, sehingga apabila terjadi perubahan konfigurasi pada 10 
\emph on
service
\emph default
 maka 10 
\emph on
service
\emph default
 tersebut diharuskan melakukan 
\emph on
restart
\emph default
 agar konfigurasi yang telah diubah dapat dibaca oleh 
\emph on
service
\emph default
 tersebut.
 Untuk mengatasi masalah tersebut, maka di dalam proses 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 dibutuhkan konfigurasi 
\emph on
server
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

.
 Konfigurasi 
\emph on
server
\emph default
 berfungsi sebagai pusat dari seluruh konfigurasi, sehingga konfigurasi
 
\emph on
server
\emph default
 akan menyimpan semua konfigurasi 
\emph on
service
\emph default
 yang terdapat di dalam arsitektur 
\emph on
microservice
\emph default
.
 Setiap terjadi perubahan konfigurasi 
\emph on
service
\emph default
 pada konfigurasi 
\emph on
server
\emph default
, maka konfigurasi 
\emph on
server
\emph default
 akan mengirimkan konfigurasi baru kepada 
\emph on
service
\emph default
 tersebut sehingga tidak diperlukan proses 
\emph on
restart
\emph default
 
\emph on
service
\emph default
.
\end_layout

\begin_layout Section
Membuat 
\emph on
Edge
\emph default
 
\emph on
Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Kompleknya 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
microservice
\emph default
 sehingga dibutuhkan sebuah 
\emph on
edge
\emph default
 
\emph on
server
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "false"

\end_inset

.
 
\emph on
Edge
\emph default
 
\emph on
server
\emph default
 digunakan sebagai pintu masuk trafik dari berbagai 
\emph on
client
\emph default
, trafik yang berasal dari 
\emph on
client
\emph default
 diterukan ke masing - masing 
\emph on
service
\emph default
 melalui 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 tersebut.
 
\emph on
Edge
\emph default
 
\emph on
server
\emph default
 berfungsi untuk melakukan proses pemantauan status dan jumlah penggunaan
 dari masing - masing 
\emph on
service
\emph default
.
 Proses pembuatan 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 pada penelitian ini menggunakan teknologi 
\emph on
spring
\emph default
 
\emph on
cloud
\emph default
 
\emph on
zuul
\emph default
.
\end_layout

\begin_layout Section
Membungkus 
\emph on
Service
\emph default
 Di Dalam 
\emph on
Docker
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
METODOLOGI PENELITIAN
\end_layout

\begin_layout Section
Tahapan Penelitian
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tahapan penelitian adalah langkah - langkah pelaksanaan penelitian yang
 dilakukan dari awal hingga akhir.
 Gambar 3.1 adalah tahapan penelitian yang dilakukan pada penelitian ini.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Tahapan Penelitian.png
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tahapan Penelitian
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Adapun penjelasan dari tahapan penelitian pada gambar 3.1 adalah
\end_layout

\begin_layout Enumerate
Identifikasi masalah
\end_layout

\begin_deeper
\begin_layout Standard
Identifikasi masalah adalah salah satu proses yang dilakukan untuk memulai
 penelitian.
 Identifikasi masalah dilakukan untuk mengetahui dan mengidentifikasi permasalah
an yang terjadi di lapangan.
\end_layout

\end_deeper
\begin_layout Enumerate
Objek penelitian
\end_layout

\begin_deeper
\begin_layout Standard
Pada saat proses penelitian, diperlukan objek penelitian yang digunakan
 sebagai pusat penelitian.
\end_layout

\end_deeper
\begin_layout Enumerate
Studi Pustaka Dan Lapangan
\end_layout

\begin_deeper
\begin_layout Standard
Setelah melakukan identifikasi masalah, maka dilakukan studi pustaka dan
 lapangan yang berfungsi untuk mencari melihat dan mempelajari masalah yang
 terdapat pada objek penelitian.
\end_layout

\end_deeper
\begin_layout Enumerate
Pengumpulan Data
\end_layout

\begin_deeper
\begin_layout Standard
Pengumpulan data dilakukan untuk kebutuhan perancangan dan simulasi pada
 sebuah penelitian.
\end_layout

\end_deeper
\begin_layout Enumerate
Analisa sistem yang sedang berjalan
\end_layout

\begin_deeper
\begin_layout Standard
Analisa sistem dilakukan untuk menguraikan sebuah sistem yang sedang berjalan
 ke dalam bagian - bagian tertentu.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah tahapan proses mengubah aplikasi berbasis 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 dan penjelasan mengenai tahapan 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Refactoring
\emph default
 
\emph on
database
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Refactoring
\emph default
 
\emph on
database
\emph default
 adalah tahapan proses mengubah 
\emph on
database
\emph default
 dari 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Refactoring
\emph default
 
\emph on
Source
\emph default
 
\emph on
Code
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Refactoring
\emph default
 
\emph on
Source
\emph default
 
\emph on
Code
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 merupakan tahapan mengubah 
\emph on
source
\emph default
 
\emph on
code
\emph default
 berbasis 
\emph on
monolitich
\emph default
 menjadi microservice.
\end_layout

\end_deeper
\begin_layout Enumerate
Pembuatan 
\emph on
docker
\emph default
 
\emph on
image
\end_layout

\begin_deeper
\begin_layout Standard
Pembuatan 
\emph on
docker
\emph default
 
\emph on
image
\emph default
 adalah tahapan pembuatan docker image untuk masing - masing 
\emph on
service
\emph default
 yang telah dipecah berdasarkan tahapan sebelum nya.
 
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Deployment
\emph default
 ke 
\emph on
server
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Deployment
\emph default
 ke 
\emph on
server
\emph default
 adalah tahapan proses 
\emph on
deployment
\emph default
 
\emph on
docker
\emph default
 
\emph on
image
\emph default
 ke 
\emph on
server
\emph default
.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Testing
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Testing
\emph default
 adalah tahapan melakukan pengujian atau kelayakan terhadap sebuah aplikasi.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Monitoring
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Monitoring
\emph default
 adalah tahapan memantau aplikasi yang sedang berjalan.
 
\end_layout

\end_deeper
\begin_layout Section
Objek Penelitian
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Objek penelitian dalam penelitian adalah PT.
 Graha Usaha Teknik.
 Penelitian dilakukan pada sistem absensi karyawan di perusahaan PT.
 Graha Usaha Teknik.
 Karyawan yang dijadikan sebagai objek penelitian adalah karyawan yang langsung
 mengakses web absensi PT.
 Graha Usaha Teknik.
 Penelitian hanya dikhususkan kepada karyawan yang terdaftar di PT.
 Graha Usaha Teknik, dimana karyawan dapat melihat laporan mengenai kehadiran,
 jumlah jam kerja dan gaji.
\end_layout

\begin_layout Section
Studi Pustaka Dan Lapangan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Studi pustaka dilakukan untuk mencari suatu metode yang berfungsi memecahkan
 sebuah masalah yang diteliti dan sebagai referensi untuk menerapkan sebuah
 metode.
 Studi pustaka dilakukan dengan mempelajari buku - buku, literatul - literatul
 dan jurnal - jurnal yang berhubungan dengan penelitian.
\end_layout

\begin_layout Standard
Studi lapangan dilakukan untuk melihat dan mempelajari permasalahan yang
 terdapat pada PT.
 Graha Usaha Teknik.
 Studi lapangan pada penelitian ini dilakukan dengan melakukan wawancara
 langsung pada pihak PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Section
Pengumpulan Data
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Teknik pengumpulan data yang dilakukan pada penelitian ini dengan observasi.
 Observasi dilakukan dengan melakukan wawancara langsung pada pihak PT.
 Graha Usaha teknik.
 Pengumpulan data ini dilakukan untuk kebutuhan perancangan dan simulasi
 pada penelitian ini.
 Data yang digunakan pada penelitian ini adalah 
\emph on
data
\emph default
 
\emph on
primer
\emph default
 yang terdiri dari
\end_layout

\begin_layout Enumerate
Data karyawan
\end_layout

\begin_layout Enumerate
Data posisi karyawan
\end_layout

\begin_layout Enumerate
Data ketetapan waktu kerja karyawan
\end_layout

\begin_layout Enumerate
Data APD (alat pelindung diri)
\end_layout

\begin_layout Chapter
HASIL DAN PEMBAHASAN
\end_layout

\begin_layout Section
Analisa Sistem Yang Sedang Berjalan
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Analisa sistem yang digunakan pada penelitian ini adalah analisa 
\emph on
user
\emph default
, prosedur dan arsitektur pada sistem yang sedang berjalan.
\end_layout

\begin_layout Subsection
Analisa User
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Analisa 
\emph on
user
\emph default
 bertujuan untuk mengetahui 
\emph on
user
\emph default
 yang menggunakan sistem.
 Proses absensi pada perusahaan PT.
 Graha Usaha Teknik melibatkan karyawan dan admin sebagai 
\emph on
user
\emph default
 pada sistem yang sedang berjalan.
 Karyawan pada PT.
 Graha Usaha Teknik dapat mengakses dan melihat informasi pada sistem yang
 sedang berjalan.
 Informasi yang dapat diakses oleh karyawan meliputi laporan absensi, peminjaman
 alat pelindung diri (APD) dan pengajian.
 Admin pada PT.
 Graha Usaha Teknik dapat melakukan perubahan dan mengakses informasi pada
 sistem yang sedang berjalan.
 Perubahan informasi yang dapat dilakukan oleh admin diantaranya pengelolaan
 data posisi, pengelolaan data karyawan, pengelolaan data jam kerja, pengelolaan
 data alat pelindung diri (APD), pengelolaan data manajemen alat pelindung
 diri (APD) dan pengelolaan data laporan harian.
\end_layout

\begin_layout Subsection
Analisa Prosedur
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Analisa prosedur dilakukan untuk mengetahui alur prosedur absensi pada PT.
 Graha Usaha Teknik.
 Pada sistem absensi PT.
 Graha Usaha Teknik terdapat beberapa prosedur yaitu prosedur absensi, prosedur
 peminjaman alat pelindung diri (APD), dan prosedur laporan harian.
\end_layout

\begin_layout Subsubsection
Prosedur Absensi
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Prosedur absensi dilakukan untuk mengetahui proses absensi seorang karyawan.
 Prosedur absensi yang dilakukan pada PT.
 Graha Usaha Teknik sebagai berikut :
\end_layout

\begin_layout Enumerate
Karyawan berkumpul di suatu lapangan untuk proses absensi.
\end_layout

\begin_layout Enumerate
Admin melakukan perhitungan jumlah karyawan yang hadir.
\end_layout

\begin_layout Enumerate
Admin melakukan input data absensi karyawan berdasarkan jam masuk kerja.
\end_layout

\begin_layout Enumerate
Admin melakukan input data absensi karyawan berdasarkan jam selesai kerja.
\end_layout

\begin_layout Enumerate
Karyawan melihat laporan absensi.
\end_layout

\begin_layout Subsubsection
Prosedur Peminjaman Alat Pelindung Diri (APD)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Prosedur peminjaman APD dilakukan untuk mengetahui proses peminjaman APD
 seorang karyawan.
 Prosedur peminjaman APD yang dilakukan pada PT.
 Graha Usaha Teknik sebagai berikut :
\end_layout

\begin_layout Enumerate
Karyawan memberikan informasi mengenai kebutuhan APD.
\end_layout

\begin_layout Enumerate
Admin melakukan input data APD berdasarkan permintaan karyawan.
\end_layout

\begin_layout Enumerate
Admin memberikan APD kepada karyawan.
\end_layout

\begin_layout Subsubsection
Prosedur Laporan Harian
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Prosedur laporan harian dilakukan untuk mengetahui proses laporan harian
 kerja di suatu 
\emph on
project
\emph default
.
 Prosedur laporan harian yang dilakukan pada PT.
 Graha Usaha Teknik sebagai berikut :
\end_layout

\begin_layout Enumerate
Admin mendatangi lokasi project.
\end_layout

\begin_layout Enumerate
Admin melakukan pemantauan kerja karyawan.
\end_layout

\begin_layout Enumerate
Admin melakukan pemantauan 
\emph on
project
\emph default
.
\end_layout

\begin_layout Enumerate
Admin melakukan input data laporan harian.
\end_layout

\begin_layout Subsection
Analisa Arsitektur
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Arsitektur 
\emph on
monolithic 
\emph default
dibuat dalam bentuk REST (
\emph on
Representational State Transfer
\emph default
).
 Pembuatan REST pada arsitektur 
\emph on
monolithic
\emph default
 bertujuan agar aplikasi 
\emph on
client
\emph default
 dapat langsung menggunakan API (
\emph on
Application Programming Interface
\emph default
) yang telah disediakan oleh sistem.
 Gambar 4.1 adalah gambar arsitektur 
\emph on
monolithic
\emph default
 yang digunakan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Current Arsitektur.png
	width 13.864cm
	height 4.128cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Monolithic
\emph default
 Pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gambar 4.1 merupakan alur penggunaan API (
\emph on
Application Programming Interface
\emph default
) dari aplikasi client hingga menghasilkan data yang dibutuhkan.
 Alur yang penggunaan API terjadi saat aplikasi client melakukan request
 kepada aplikasi server melalui API.
 Dengan adanya request dari aplikasi client, aplikasi server akan memproses
 request dan meneruskan ke bagian bisnis proses.
 Bagian bisnis proses akan mengolah request tersebut sehingga request tersebut
 dapat diproses melalui query database untuk kebutuhan penyimpanan dan perubahan
 data di database.
 Setelah selesai memproses request tersebut, maka aplikasi server akan mengembal
ikan response yang dibutuhkan oleh aplikasi client.
\end_layout

\begin_layout Section
Refactoring Monolithic Menjadi Microservice
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Strategi yang digunakan pada penelitian ini untuk melakukan refactoring
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
.
 Strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
 merupakan strategi yang cocok digunakan untuk melakukan refactoring 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice 
\emph default
pada perusahaan PT.
 Graha Usaha teknik, dikarenakan PT.
 Graha Usaha teknik telah memiliki sistem yang sedang berjalan.
 Berdasarkan sistem yang telah dibangun, maka urutan 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 yang akan dilakukan 
\emph on
refactoring
\emph default
 sebagai berikut.
\end_layout

\begin_layout Enumerate
OAuth2 Service
\end_layout

\begin_layout Enumerate
Position Time Constant Service
\end_layout

\begin_layout Enumerate
Man Power Service
\end_layout

\begin_layout Enumerate
ManHour Service
\end_layout

\begin_layout Enumerate
Report Daily Service
\end_layout

\begin_layout Enumerate
APD
\end_layout

\begin_layout Standard
Proses pengurutan 
\emph on
refactoring
\emph default
 
\emph on
service
\emph default
 tersebut berdasarkan banyaknya 
\emph on
dependency
\emph default
 satu 
\emph on
service
\emph default
 ke 
\emph on
service
\emph default
 yang lain.
 Proses pemecahan dan pengurutan 
\emph on
refactoring
\emph default
 
\emph on
service
\emph default
 akan dibahas pada langkah - langkah melakukan migrasi 
\emph on
monolithic 
\emph default
menjadi 
\emph on
microservice
\emph default
.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

, untuk melakukan migrasi sistem berbasis 
\emph on
monolithic 
\emph default
menjadi 
\emph on
microservice, 
\emph default
maka digunakan 15 langkah sebagai berikut.
\end_layout

\begin_layout Enumerate

\emph on
Enable the Continuous Integration
\end_layout

\begin_layout Enumerate

\emph on
Recover the Current Architecture
\end_layout

\begin_layout Enumerate

\emph on
Decompose the Monolith
\end_layout

\begin_layout Enumerate

\emph on
Decompose the Monolith Based on Data Ownership
\end_layout

\begin_layout Enumerate

\emph on
Change Code Dependency to Service Call
\end_layout

\begin_layout Enumerate

\emph on
Introduce Service Discovery
\end_layout

\begin_layout Enumerate

\emph on
Introduce Service Discovery Client
\end_layout

\begin_layout Enumerate

\emph on
Introduce Internal Load Balancer
\end_layout

\begin_layout Enumerate

\emph on
Introduce External Load Balancer
\end_layout

\begin_layout Enumerate

\emph on
Introduce Circuit Breaker
\end_layout

\begin_layout Enumerate

\emph on
Introduce Configuration Server
\end_layout

\begin_layout Enumerate

\emph on
Introduce Edge Server
\end_layout

\begin_layout Enumerate

\emph on
Containerize the Services
\end_layout

\begin_layout Enumerate

\emph on
Deploy into a Cluster and Orchestrate Containers
\end_layout

\begin_layout Enumerate

\emph on
Monitor the System and Provide Feedback
\end_layout

\begin_layout Standard
Berdasarkan strategi 
\emph on
strangler
\emph default
 
\emph on
pattern
\emph default
, 15 langkah migrasi akan dilakukan berulang pada saat pengembangan service
 baru.
\end_layout

\begin_layout Subsection

\emph on
Enable the Continuous Integration
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Langkah pertama yang dilakukan
\emph on
 
\emph default
adalah membuat 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
.
 Pada penelitian ini, gitlab digunakan sebagai 
\emph on
repository source code
\emph default
 dan 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "de2016evolve"
literal "true"

\end_inset

, 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 berfungsi untuk melakukan proses otomatisasi terhadap kegiatan build, testing
 dan laporan jika aplikasi yang dibangun masih terdapat kesalahan.
 Setiap 
\emph on
service
\emph default
 akan dibuatkan 1 
\emph on
repository
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
, sehingga proses 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 dilakukan secara 
\emph on
independent
\emph default
 berdasarkan 
\emph on
repository
\emph default
.
 Dengan adanya pemisahan 
\emph on
service
\emph default
 berdasarkan 
\emph on
repository
\emph default
, maka mengurangi kesalahan pada saat proses 
\emph on
continuous
\emph default
 
\emph on
integration 
\emph default
di setiap 
\emph on
service.

\emph default
 Gambar 4.2 adalah tahapan 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 yang dilakukan pada penelitian ini.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Continuous Integration.png
	width 12.171cm
	height 7.549cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur Continuous Integration
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Adapun tahapan 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 yang dilakukan berdasarkan gambar 4.2 adalah
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 melakukan 
\emph on
pull
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 dari gitlab ke komputer.
\end_layout

\begin_layout Enumerate

\emph on
Dev
\emph default
eloper melakukan perubahan, 
\emph on
commit
\emph default
 dan 
\emph on
push
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 ke gitlab.
\end_layout

\begin_layout Enumerate
Gitlab akan melakukan 
\emph on
pull
\emph default
 image dari 
\emph on
docker
\emph default
 
\emph on
hub
\emph default
 berdasarkan kebutuhan 
\emph on
source
\emph default
 
\emph on
code
\emph default
.
\end_layout

\begin_layout Enumerate
Gitlab melakukan 
\emph on
build
\emph default
, 
\emph on
testing
\emph default
, membuat dan 
\emph on
push
\emph default
 
\emph on
docker
\emph default
 
\emph on
image
\emph default
 ke 
\emph on
docker
\emph default
 
\emph on
hub
\emph default
.
\end_layout

\begin_layout Enumerate
Gitlab melakukan 
\emph on
deploy
\emph default
 
\emph on
docker
\emph default
 
\emph on
container
\emph default
 ke 
\emph on
server
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
Recover the Current Architecture
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Untuk dapat melakukan 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 maka diperlukan langkah 
\emph on
recover
\emph default
 
\emph on
the
\emph default
 
\emph on
current
\emph default
 
\emph on
architecture
\emph default
.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

, Pada langkah ini terdapat 3 hal penting yang harus dilakukan yaitu :
\end_layout

\begin_layout Itemize

\emph on
Component and Service Architecture
\emph default
, seluruh team 
\emph on
development
\emph default
 harus mengetahui 
\emph on
component
\emph default
 dan 
\emph on
service
\emph default
 apa saja yang terdapat pada arsitektur yang sedang berjalan.
\end_layout

\begin_layout Itemize

\emph on
Technology Architecture
\emph default
, seluruh team 
\emph on
development
\emph default
 harus mengetahui teknologi apa saja yang digunakan pada arsitektur yang
 sedang berjalan.
\end_layout

\begin_layout Itemize

\emph on
Deployment Architecture and Procedure
\emph default
, seluruh team 
\emph on
development
\emph default
 harus mengetahui bagaimana proses 
\emph on
deployment
\emph default
 aplikasi pada arsitektur yang sedang berjalan.
\end_layout

\begin_layout Subsubsection

\emph on
Component and Service Architecture
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada tahapan ini, seluruh team development melakukan analisis terhadap 
\emph on
comp
\emph default
onent dan 
\emph on
service
\emph default
 yang digunakan pada arsitektur yang sedang berjalan.
 Arsitektur yang sedang berjalan adalah arsitektur 
\emph on
monolithic
\emph default
 yang dibangun dalam bentuk REST (
\emph on
Representational State Transfer
\emph default
).
 Gambar 4.3 adalah gambar 
\emph on
component 
\emph default
dan
\emph on
 service
\emph default
 pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Monolitich.png
	width 15.593cm
	height 10.724cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Component
\emph default
 Dan 
\emph on
Service
\emph default
 Pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada arsitektur 
\emph on
monolithic
\emph default
 PT.
 Graha Usaha teknik, terdapat 7 API yang dapat digunakan oleh aplikasi disisi
 
\emph on
client
\emph default
 yaitu :
\end_layout

\begin_layout Itemize
API APD (ApdTool_API) digunakan sebagai informasi data APD.
\end_layout

\begin_layout Itemize
API Man Hour (ManHour_API) digunakan sebagai informasi data jam kerja karyawan.
\end_layout

\begin_layout Itemize
API Man Power Has APD (MPHApd_API) digunakan sebagai informasi data peminjaman
 APD.
\end_layout

\begin_layout Itemize
API Man Power (ManPower_API) digunakan sebagai informasi data karyawan.
\end_layout

\begin_layout Itemize
API Position (Position_API) digunakan sebagai informasi posisi atau jabatan.
\end_layout

\begin_layout Itemize
API Report Daily (ReportDaily_API) digunakan sebagai informasi laporan harian.
\end_layout

\begin_layout Itemize
API Time Constant (Timeconstant_API) digunakan sebagai informasi ketentuan
 atau batasan jam kerja.
\end_layout

\begin_layout Standard
Pada gambar 4.3 terdapat 9 bisnis proses, dimana bisnis proses ini digunakan
 sebagai pemrosesan utama dari suatu sistem.
 Berikut adalah penjelasan mengenai 9 bisnis proses pada gambar 4.3 :
\end_layout

\begin_layout Itemize
Bisnis Proses APD (ApdTool_BP) digunakan sebagai bisnis proses untuk APD.
\end_layout

\begin_layout Itemize
Bisnis Proses Man Hour (ManHour_BP) digunakan sebagai bisnis proses untuk
 perhitungan jam kerja karyawan.
\end_layout

\begin_layout Itemize
Bisnis Proses Man Power Has APD (MPHApd_BP) digunakan sebagai bisnis proses
 untuk pengelolaan data peminjaman APD seorang karyawan.
\end_layout

\begin_layout Itemize
Bisnis Proses Man Power Has Report Daily (MPHRDaily_BP) digunakan sebagai
 bisnis proses untuk pengelolaan laporan harian seorang karyawan.
\end_layout

\begin_layout Itemize
Bisnis Proses Man Power (ManPower_BP) digunakan sebagai bisnis proses untuk
 pengelolaan data karyawan.
\end_layout

\begin_layout Itemize
Bisnis Proses Position (Position_BP) digunakan sebagai bisnis proses untuk
 pengelolaan posisi atau jabatan.
\end_layout

\begin_layout Itemize
Bisnis Proses Report Daily (ReportDaily_BP) digunakan sebagai bisnis proses
 untuk pengelolaan laporan harian.
\end_layout

\begin_layout Itemize
Bisnis Proses Time Constant (TimeConstant_BP) digunakan sebagai bisnis proses
 untuk pengelolaan ketentuan dan batasan jam kerja.
\end_layout

\begin_layout Itemize
Bisnis Proses User Authentication (UserAuthentication_BP) digunakan sebagai
 bisnis proses untuk proses 
\emph on
authentication
\emph default
 
\emph on
user
\emph default
.
\end_layout

\begin_layout Standard
Pada gambar 4.3 juga terdapat proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
, dimana proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 ini berfungsi untuk mengambil atau melakukan manipulasi data pada 
\emph on
data
\emph default
base.
 Data yang berasal dari 
\emph on
database
\emph default
 nantinya akan digunakan oleh bisnis proses untuk diproses sesuai dengan
 kebutuhan 
\emph on
client
\emph default
.
 Proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada gambar 4.3 berjumlah 9, diantaranya adalah :
\end_layout

\begin_layout Itemize
Query APD (ApdTool_qd) digunakan untuk proses 
\emph on
que
\emph default
ry 
\emph on
database
\emph default
 pada tabel APD.
\end_layout

\begin_layout Itemize
Query Man Hour (ManHour_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel Man Hour.
\end_layout

\begin_layout Itemize
Query Man Power Has APD (MPHApd_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel Man Power Has APD.
\end_layout

\begin_layout Itemize
Query Man Power Has Report Daily (MPHRDaily_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel Man Power Has Report Daily.
\end_layout

\begin_layout Itemize
Query Man Power (ManPower_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel Man Power.
\end_layout

\begin_layout Itemize
Query Position (Position_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel Position.
\end_layout

\begin_layout Itemize
Query Report Daily (ReportDaily_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
datab
\emph default
ase pada tabel Report Daily.
\end_layout

\begin_layout Itemize
Query Time Constant (TimeConstant_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel Time Constant.
\end_layout

\begin_layout Itemize
Query User (User_qd) digunakan untuk proses 
\emph on
query
\emph default
 
\emph on
database
\emph default
 pada tabel 
\emph on
User
\emph default
.
\end_layout

\begin_layout Subsubsection

\emph on
Technology Architecture
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada tahapan ini, teknologi yang digunakan oleh arsitektur yang sedang berjalan
 harus dijelaskan kepada seluruh team 
\emph on
development
\emph default
.
 Teknologi yang digunakan pada PT.
 Graha Usaha Teknik adalah :
\end_layout

\begin_layout Itemize
PostgreSQL digunakan sebagai database.
\end_layout

\begin_layout Itemize
Bahasa Pemrograman Java digunakan sebagai bahasa pemrograman utama untuk
 membangun arsitektur yang sedang berjalan.
\end_layout

\begin_layout Itemize
Spring Framework digunakan sebagai framework java untuk membangun arsitektur
 yang sedang berjalan.
\end_layout

\begin_layout Itemize
Bootstrap Material digunakan sebagai framework untuk membuat tampilan pada
 arsitektur yang sedang berjalan.
\end_layout

\begin_layout Itemize
Angular JS digunakan sebagai client yang dapat mengakses API.
\end_layout

\begin_layout Subsubsection

\emph on
Deployment Architecture and Procedure
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proses analisis 
\emph on
deployment architecture 
\emph default
dan
\emph on
 procedure 
\emph default
bertujuan untuk pengembangan 
\emph on
deployment
\emph default
 dengan menggunakan pendekatan 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
.
 Dengan adanya proses ini, maka seluruh team development dapat mengetahui
 bagaimana proses deployment pada arsitektur yang sedang berjalan dan mempermuda
h team development untuk membuat proses 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
.
 Gambar 4.4 adalah 
\emph on
Deployment architecture 
\emph default
dan
\emph on
 procedure
\emph default
 yang digunakan pada PT.
 Graha Usaha teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Current Deployment.png
	width 5.186cm
	height 6.844cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Deployment Architecture 
\emph default
dan
\emph on
 Procedure 
\emph default
Pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Adapun tahapan 
\emph on
continuous
\emph default
 
\emph on
integration 
\emph default
berdasarkan gambar 4.4 adalah
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
  melakukan pull source code.
\end_layout

\begin_layout Enumerate

\emph on
Dev
\emph default
eloper melakukan perubahan, 
\emph on
commit
\emph default
 dan 
\emph on
push
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 ke gitlab.
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 melakukan 
\emph on
build
\emph default
, 
\emph on
testin
\emph default
g dan 
\emph on
deploy
\emph default
 aplikasi ke 
\emph on
server
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
Decompose the Monolith
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Decompose the monolith 
\emph default
adalah proses pemecahan 
\emph on
service
\emph default
 yang terdapat pada arsitektur 
\emph on
monolitich
\emph default
 menjadi 
\emph on
service
\emph default
 
\emph on
microservice
\emph default
.
 Proses pemecahan pada penelitian ini berdasarkan bisnis proses yang terdapat
 di dalam arsitektur 
\emph on
monolitich
\emph default
.
 Setiap bisnis proses dapat dipisah menjadi service yang lebih kecil, akan
 tetapi pada penelitian ini tidak semua service dipisah dikarenakan bisnis
 proses tersebut sederhana dan mempunyai bisnis proses yang saling membutuhkan.
 Contohnya yaitu bisnis proses APD dan Man Power Has APD akan dikembangkan
 di dalam 1 service, dimana pada saat proses inputan data baru pada bisnis
 proses Man Power Has APD, maka dibutuhkan data yang berasal dari APD.
 Gambar 4.5 adalah decompose the 
\emph on
Monolith 
\emph default
pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/Microservice Dependency Graph.png
	width 15.628cm
	height 7.761cm

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Decompose
\emph default
 
\emph on
the
\emph default
 
\emph on
Monolith 
\emph default
pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gambar 4.5 memiliki warna panah yang berbeda - beda.
 Panah warna hitam adalah proses komunikasi antara API dan bisnis proses,
 biasanya proses komunikasi ini melalui pemanggailan method di dalam source
 code.
 Panah warna kuning adalah proses komunikasi antara satu bisnis proses dengan
 bisnis proses lain melalui pemanggailan method di dalam 
\emph on
source
\emph default
 
\emph on
code
\emph default
.
 Panah warna hijau adalah proses komunikasi antara satu bisnis proses dengan
 bisnis proses lain melalui pemanggilan API.
 Panah warna merah adalah proses komunikasi antara bisnis proses dengan
 
\emph on
database
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
Decompose the Monolith Based on Data Ownership
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada tahap sebelumnya, pemecahan 
\emph on
service
\emph default
 dilakukan berdasarkan bisnis proses.
 Pada tahap ini, pemecahan 
\emph on
service
\emph default
 dilakukan berdasarkan 
\emph on
data
\emph default
 
\emph on
ownership
\emph default
, dimana pada proses ini dilakukan mapping antara bisnis proses dengan tabel
 pada 
\emph on
database
\emph default
.
 Gambar 4.6 adalah 
\emph on
Decompose the Monolith Based on Data Ownership
\emph default
 pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Microservice Database Decomposition.png
	width 14.464cm
	height 8.996cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Decompose the Monolith Based on Data Ownership
\emph default
 pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada gambar 4.6 terdapat 10 tabel dan 9 bisnis proses, dimana 1 bisnis proses
 dapat mengakses lebih dari 1 tabel.
 Jika tabel tidak terdapat pada service tertentu tapi service tersebut membutuhk
an tabel tersebut maka bisnis proses tersebut melakukan komunikasi dengan
 bisnis proses lain melalui API untuk mendapatkan data dari tabel yang dibutuhka
n, contohnya adalah bisnis proses Man Hour (ManHour_BP) memerlukan data
 dari tabel tb_man_power, akan tetapi tabel tb_man_power tidak terdapat
 di dalam service Man Hour maka service Man Hour akan melakukan pemanggilan
 API Man Power.
\end_layout

\begin_layout Subsection

\emph on
Change Code Dependency to Service Call
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada tahap ini, semua 
\emph on
code
\emph default
 
\emph on
dependency
\emph default
 atau pemanggilan fungsi diubah menjadi pemanggilan 
\emph on
service
\emph default
 melalui API.
 Berdasarkan tahapan sebelumnya yaitu 
\emph on
Decompose the Monolith 
\emph default
dan
\emph on
 Decompose the Monolith Based on Data Ownership, 
\emph default
terdapat 5 bisnis proses yang memiliki 
\emph on
code
\emph default
 
\emph on
dependency
\emph default
 yaitu Bisnis proses Man Power Has APD, Man Hour, Position, Man Power dan
 Report Daily.
 Gambar 4.7 adalah gambar bisnis proses yang akan melakukan 
\emph on
service
\emph default
 
\emph on
call
\emph default
 melalui API dan menggantikan 
\emph on
code
\emph default
 
\emph on
dependency
\emph default
 antar sesama bisnis proses.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Service Call.png
	width 14.217cm
	height 4.762cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Change Code Dependency to Service Call 
\emph default
pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.7
\emph on
, 
\emph default
terdapat 5 bisnis proses yang memiliki 
\emph on
code
\emph default
 
\emph on
dependency
\emph default
 yaitu
\end_layout

\begin_layout Itemize
Bisnis proses Man Power Has APD yang memerlukan data Man Power.
\end_layout

\begin_layout Itemize
Bisnis proses Man Hour yang memerlukan data Man Power dan Time Constant.
\end_layout

\begin_layout Itemize
Bisnis proses Position yang memerlukan data Man Power.
\end_layout

\begin_layout Itemize
Bisnis proses Man Power yang memerlukan data position.
\end_layout

\begin_layout Itemize
Bisnis proses Report Daily yang memerlukan data Man Power.
\end_layout

\begin_layout Subsection

\emph on
Introduce Service Discovery
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Permasalahan yang sering terjadi pada sebuah arsitektur microservice adalah
 bagaimana suatu 
\emph on
service
\emph default
 dapat mengetahui IP, port dari 
\emph on
se
\emph default
rvice lain nya, dan bagaimana sebuah 
\emph on
api
\emph default
 
\emph on
gateway
\emph default
 atau 
\emph on
load
\emph default
 
\emph on
balan
\emph default
cer dapat mengetahui seluruh daftar 
\emph on
service
\emph default
 yang tersedia 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

.
 Untuk menyelesaikan permasalahan ini, maka digunakan sebuah 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 yang berfungsi untuk menampung daftar seluruh 
\emph on
service
\emph default
 yang terdapat pada 
\emph on
microservice
\emph default
.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "microservicesbestpracticesforjava"
literal "true"

\end_inset

, terdapat beberapa solusi untuk 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 yang dapat digunakan, diantaranya adalah 
\emph on
consul
\emph default
, 
\emph on
eureka
\emph default
 dan 
\emph on
Amalgam8
\emph default
.
 
\emph on
Eureka
\emph default
 merupakan bagian dari projek 
\emph on
netflix
\emph default
 sehingga akan mempermudah melakukan integrasi dengan solusi yang dikembangkan
 oleh 
\emph on
netflix
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "microservicesbestpracticesforjava"
literal "true"

\end_inset

.
 
\emph on
Service
\emph default
 
\emph on
discovery
\emph default
 yang digunakan pada penelitian ini adalah 
\emph on
Eureka
\emph default
.
 
\emph on
Service
\emph default
 
\emph on
discovery
\emph default
 digunakan sebagai 
\emph on
server
\emph default
, sehingga 
\emph on
eureka
\emph default
 yang digunakan adalah 
\emph on
eureka
\emph default
 
\emph on
server
\emph default
.
 Pada penelitian ini, 
\emph on
eureka
\emph default
 dijalankan lebih dari satu 
\emph on
instance
\emph default
 dikarenakan jika satu 
\emph on
instance
\emph default
 mati maka akan digantikan oleh 
\emph on
instance
\emph default
 yang lain.
 Gambar 4.8 adalah arsitektur 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 yang digunakan pada 
\emph on
microservice
\emph default
 PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Discovery Service.png
	width 14.781cm
	height 6.174cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Service
\emph default
 
\emph on
Discovery
\emph default
 pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gambar 4.8 terdapat beberapa panah yang mengambarkan sebuah alur.
 Berikut adalah penjelasan dari warna - warna panah tersebut.
\end_layout

\begin_layout Itemize
Panah warna hijau berfungsi untuk melakukan komunikasi antar service.
\end_layout

\begin_layout Itemize
Panah warna merah adalah proses komunikasi antara service dengan service
 discovery.
\end_layout

\begin_layout Itemize
Panah warna biru adalah proses komunikasi antar service discovery.
\end_layout

\begin_layout Subsection

\emph on
Introduce Service Discovery Client
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Setelah membuat 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
, masalah selanjutnya yang muncul adalah bagaimana 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 dapat mengetahui 
\emph on
service
\emph default
 yang telah berhasil dijalankan atau 
\emph on
service
\emph default
 yang telah mati 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

.
 Untuk dapat menyelesaikan masalah ini, maka setiap 
\emph on
service
\emph default
 harus mengetahui IP dan 
\emph on
port
\emph default
 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 sehingga 
\emph on
service
\emph default
 tersebut dapat melakukan pendaftaran secara otomatis pada 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 yang dituju.
 Proses pendaftaran otomatis yang dilakukan oleh 
\emph on
service
\emph default
 menggunakan solusi 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
client
\emph default
 yaitu 
\emph on
eureka
\emph default
 
\emph on
client
\emph default
.
 Gambar 4.9 adalah arsitektur 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
client
\emph default
 yang akan digunakan pada 
\emph on
microservice
\emph default
 PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Service Discovery Client.png
	width 14.393cm
	height 6.315cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Service Discovery Client
\emph default
 pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada gambar 4.9 terdapat penambahan yaitu di masing - masing service terdapat
 
\emph on
client
\emph default
.
 
\emph on
Client
\emph default
 tersebut berfungsi sebagai 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
client
\emph default
.
 
\emph on
Service
\emph default
 yang memiliki 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 
\emph on
client
\emph default
 yaitu ManHour_API, Position_TimeConstant_API, ApdTool_MPHApd_API, ReportDaily_A
PI, ManPower_API dan User Authentication.
\end_layout

\begin_layout Subsection

\emph on
Introduce Internal Load Balancer
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Langkah selanjutnya untuk melakukan refactoring 
\emph on
monolithic
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah menambahkan 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 diantara sesama 
\emph on
service
\emph default
.
 Penggunaan 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 digunakan untuk melakukan komunikasi 
\emph on
internal
\emph default
 antar 
\emph on
service
\emph default
.
 Penggunaan 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 ini juga disebabkan adanya replikasi 
\emph on
service
\emph default
 sehingga dibutuhkan internal load balancer diantara 
\emph on
service
\emph default
 tersebut.
 Pada penelitian ini, teknologi 
\emph on
ribbon
\emph default
 digunakan sebagai 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
.
 Gambar 4.10 adalah arsitektur 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 yang akan dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Internal Load Balancer.png
	width 14.393cm
	height 6.279cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Internal
\emph default
 
\emph on
Load
\emph default
 
\emph on
Balancer
\emph default
 pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada gambar 4.10, 
\emph on
service
\emph default
 User Authentication tidak memiliki 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 disebabkan tidak ada 
\emph on
service
\emph default
 yang akan mengakses 
\emph on
service
\emph default
 User Authentication dan 
\emph on
service
\emph default
 tersebut tidak melakukan akses ke 
\emph on
service
\emph default
 yang lain.
 Setiap 
\emph on
ser
\emph default
vice yang terdapat pada gambar 4.10 memiliki 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
, sehingga jika terjadi penambahan replikasi 
\emph on
service
\emph default
 maka 
\emph on
service
\emph default
 lain dapat melakukan pemanggilan service melalui 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
.
 
\emph on
Service
\emph default
 yang memiliki 
\emph on
internal
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 yaitu ManHour_API, Position_TimeConstant_API, ApdTool_MPHApd_API, ReportDaily_A
PI dan ManPower_API.
\end_layout

\begin_layout Subsection

\emph on
Introduce External Load Balancer
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Service
\emph default
 
\emph on
dicovery
\emph default
 yang digunakan pada penelitian ini adalah dua, sehingga membutuhkan 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 antara 
\emph on
service
\emph default
 dengan 
\emph on
service
\emph default
 
\emph on
disc
\emph default
overy.
 Untuk dapat menyelesaikan masalah tersebut, maka digunakan 
\emph on
external
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 diantara 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 dan 
\emph on
service
\emph default
.
 Pada penelitian ini, eureka digunakan sebagai 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
.
 Eureka telah mendukung 
\emph on
external
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
.
 Gambar 4.11 adalah arsitektur 
\emph on
external
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 yang akan dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/External Load Balancer.png
	width 10.548cm
	height 10.089cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
External
\emph default
 
\emph on
Load
\emph default
 
\emph on
Balancer
\emph default
 pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.11 semua 
\emph on
service
\emph default
 yang mengakses 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 akan melewati 
\emph on
external
\emph default
 
\emph on
load
\emph default
 
\emph on
balancer
\emph default
 sehingga jika terjadi penambahan replikasi 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
, maka 
\emph on
service
\emph default
 lain tidak perlu melakukan perubahan 
\emph on
source
\emph default
 
\emph on
code
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
Introduce Circuit Breaker
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Circuit
\emph default
 
\emph on
breaker
\emph default
 digunakan untuk memastikan jika terjadi kegagalan pada suatu 
\emph on
service
\emph default
 maka 
\emph on
service
\emph default
 yang lain tidak akan terganggu.
 Pada penelitian ini, teknologi hystrix digunakan sebagai 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
.
 
\emph on
Circuit
\emph default
 
\emph on
breaker
\emph default
 ini digunakan disetiap 
\emph on
service
\emph default
 sehingga dapat melakukan pemanggilan kepada 
\emph on
service
\emph default
 yang lain.
 Setiap pemanggilan 
\emph on
service
\emph default
, hystrix akan mencatat apakah 
\emph on
response
\emph default
 yang dihasilkan gagal atau sukses.
 Gambar 4.15 adalah arsitektur 
\emph on
circuit breaker
\emph default
 yang akan dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Circuit Breaker.png
	width 14.393cm
	height 6.279cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Circuit Breaker
\emph default
 pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada gambar 4.12, 
\emph on
service
\emph default
 User Authentication tidak memiliki 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 disebabkan tidak ada 
\emph on
service
\emph default
 yang akan mengakses 
\emph on
service
\emph default
 User Authentication dan 
\emph on
service
\emph default
 tersebut tidak melakukan akses ke 
\emph on
service
\emph default
 yang lain.
 
\emph on
Service
\emph default
 yang memiliki 
\emph on
circuit
\emph default
 
\emph on
breaker
\emph default
 yaitu ManHour_API, Position_TimeConstant_API, ApdTool_MPHApd_API, ReportDaily_A
PI dan ManPower_API.
\end_layout

\begin_layout Subsection

\emph on
Introduce Configuration Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada penelitiain ini, 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 digunakan sebagai 
\emph on
central
\emph default
 konfigurasi.
 Setiap 
\emph on
service
\emph default
 yang berjalan akan melakukan 
\emph on
request
\emph default
 konfigurasi kepada 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
, lalu 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 memberikan konfigurasi sesuai dengan permintaan 
\emph on
service
\emph default
 tersebut.
 Seluruh konfigurasi 
\emph on
service
\emph default
 akan disimpan pada sebuah 
\emph on
repository
\emph default
 git.
 Pada penelitian ini, gitlab digunakan sebagai 
\emph on
repository
\emph default
 git dan spring 
\emph on
config
\emph default
 
\emph on
server
\emph default
 sebagai 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
.
 Gambar 4.16 adalah arsitektur 
\emph on
configuration server
\emph default
 yang dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Configuration Server.png
	width 14.111cm
	height 9.313cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Configuration Server 
\emph default
pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.16, pada saat 
\emph on
service
\emph default
 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 dijalankan, maka 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
 mengambil seluruh konfigurasi semua 
\emph on
service
\emph default
 dari gitlab.
 Masing - masing 
\emph on
service
\emph default
 melakukan 
\emph on
request
\emph default
 konfigurasi kepada 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
.
 Pada gambar 4.16 terdapat penambahan panah berwarna ungu, panah ini berfungsi
 sebagai alur 
\emph on
request
\emph default
 konfigurasi yang berasal dari 
\emph on
service
\emph default
 kepada 
\emph on
configuration
\emph default
 
\emph on
server
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
Introduce Edge Server (API Gateway)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada langkah - langkah 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
, diperlukan sebuah 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 (API 
\emph on
gateway
\emph default
) untuk menyembunyikan struktur dari 
\emph on
ser
\emph default
vice 
\emph on
microservice
\emph default
 dan memonitor status dan penggunaan 
\emph on
service
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

.
 Penggunaan 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 (API 
\emph on
gateway
\emph default
) juga berfungsi agar client dapat melakukan akses pada 1 gerbang, tanpa
 harus mengetahui keberadaan 
\emph on
service
\emph default
.
 Pada penelitian ini, 
\emph on
spring
\emph default
 
\emph on
cloud
\emph default
 
\emph on
zuul
\emph default
 digunakan sebagai 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 (API 
\emph on
gateway
\emph default
) yang menjembatani antara 
\emph on
client
\emph default
 dan 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 pada 
\emph on
microservice
\emph default
.
 Gambar 4.17 adalah arsitektur edge server (API gateway) yang dikembangkan
 pada PT.
 Graha Usaha Teknik.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/api gateway.png
	width 14.182cm
	height 12.171cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur 
\emph on
Edge
\emph default
 
\emph on
Server
\emph default
 (API 
\emph on
Gateway
\emph default
)
\emph on
 
\emph default
pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.17, Semua service yang diakses oleh client harus melewati
 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 (API 
\emph on
gateway
\emph default
).
 Pada gambar 4.17 terdapat penambahan panah berwarna jingga, panah ini berfungsi
 sebagai alur 
\emph on
request
\emph default
 yang berasal dari 
\emph on
client
\emph default
 lalu diteruskan ke 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 melalui 
\emph on
edge
\emph default
 
\emph on
server
\emph default
 (API 
\emph on
gateway
\emph default
).
\end_layout

\begin_layout Subsection

\emph on
Containerize the Services
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Microservice
\emph default
 terdiri dari banyak 
\emph on
service
\emph default
, dimana 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 tersebut dapat dilakukan 
\emph on
deployment
\emph default
 secara independen.
 Proses 
\emph on
deployment
\emph default
 membutuhkan 2 
\emph on
environment
\emph default
 yaitu 
\emph on
environment
\emph default
 
\emph on
production
\emph default
 dan 
\emph on
development
\emph default
.
 Permasalahan yang terjadi pada saat melakukan 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah bagaimana cara melakukan 
\emph on
deployment
\emph default
 kepada 2 
\emph on
environment
\emph default
 yang berbeda dengan menggunakan 
\emph on
source
\emph default
 
\emph on
code
\emph default
 yang sama 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

.
 Salah satu solusi yang dapat dilakukan adalah dengan melakukan 
\emph on
deployment
\emph default
 masing - masing 
\emph on
service
\emph default
 pada sebuah 
\emph on
server
\emph default
, akan tetapi solusi ini tidak disarankan dikarenakan diperlukan banyak
 
\emph on
server
\emph default
 untuk mendeploy banyak 
\emph on
service
\emph default
 sehingga memerlukan 
\emph on
resource
\emph default
 yang sangat banyak.
 Untuk menghemat penggunaan 
\emph on
resource
\emph default
, maka setiap 
\emph on
service
\emph default
 dilakukan proses 
\emph on
containerize
\emph default
, sehingga didalam 1 
\emph on
container
\emph default
 hanya terdapat 1 
\emph on
service
\emph default
 yang berjalan.
 Strategi yang digunakan adalah setiap satu 
\emph on
server
\emph default
 memiliki satu teknologi 
\emph on
container
\emph default
, dimana dengan teknologi 
\emph on
container
\emph default
 tersebut maka beberapa 
\emph on
service
\emph default
 dapat dijalankan secara bersamaan di dalam sebuah 
\emph on
server
\emph default
.
 Pada penelitian ini, docker digunakan sebagai teknologi 
\emph on
container
\emph default
.
 Gambar 4.18 adalah arsitektur docker yang akan dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Docker Container.png
	width 14.146cm
	height 11.712cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur Docker pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.15, proses 
\emph on
containerize
\emph default
 dapat digunakan di beberapa server fisik atau visual server.
 Service yang dilakukan proses 
\emph on
containerize
\emph default
 adalah ManHour_API, Position_TimeConstant_API, ApdTool_MPHApd_API, ReportDaily_
API , ManPower_API, User Authentication, Configuration Server, API Gateway,
 Service Discovery 1, dan Service Discovery 2.
\end_layout

\begin_layout Subsection

\emph on
Deploy into a Cluster and Orchestrate Containers
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pemanfaatan docker 
\emph on
container
\emph default
 untuk melakukan 
\emph on
deployment
\emph default
 
\emph on
service
\emph default
 di satu 
\emph on
server
\emph default
 merupakan solusi yang tidak disarankan, hal ini disebabkan jika 
\emph on
server
\emph default
 tersebut dalam keadaan mati maka seluruh 
\emph on
service
\emph default
 tidak dapat diakses.
 Permasalahan timbul ketika melakukan 
\emph on
deployment
\emph default
 sebuah 
\emph on
service
\emph default
, 
\emph on
deployment
\emph default
 harus dilakukan secara manual yaitu menjalankan 
\emph on
command
\emph default
 
\emph on
line
\emph default
 
\emph on
docker
\emph default
 untuk melakukan 
\emph on
deployment
\emph default
 
\emph on
service
\emph default
.
 Permasalahan juga timbul ketika 
\emph on
service
\emph default
 ingin melakukan 
\emph on
redeploy
\emph default
 
\emph on
container
\emph default
, maka kita harus mematikan 
\emph on
container
\emph default
 dan menjalankan 
\emph on
container
\emph default
 tersebut secara manual, permasalahan ini dapat menyebabkan 
\emph on
human
\emph default
 
\emph on
error
\emph default
 dan membutuhkan waktu yang lama untuk melakukan proses 
\emph on
redeploy
\emph default
 
\emph on
container
\emph default
.
 Menurut 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

, permasalahan tersebut dapat diatasi dengan membuat 
\emph on
cluster
\emph default
 pada docker.
 Untuk membuat 
\emph on
cluster
\emph default
 pada docker, maka dibutuhkan sebuah sistem untuk manajemen docker yaitu
 kubernetes.
 Pada penelitian ini, digunakan 3 komputer dengan spesifikasi seperti berikut.
\end_layout

\begin_layout Itemize
Komputer 1 (Node Master) berfungsi sebagai manajemen 
\emph on
deployment
\emph default
, semua 
\emph on
container
\emph default
 akan dilakukan 
\emph on
deployment
\emph default
 melalui node master.
 Pada node master terdapat sebuah 
\emph on
web
\emph default
 
\emph on
dashboard
\emph default
 kubernetes yang berfungsi untuk 
\emph on
monitoring
\emph default
 aktifitas kubernetes.
\end_layout

\begin_layout Itemize
Komputer 2 (Node Worker 1) berfungsi sebagai tempat 
\emph on
deploy
\emph default
 
\emph on
container
\emph default
.
\end_layout

\begin_layout Itemize
Komputer 3 (Node Worker 2) berfungsi sebagai tempat 
\emph on
deploy
\emph default
 
\emph on
container
\emph default
.
\end_layout

\begin_layout Standard
Untuk menghubungkan ketiga komputer tersebut maka akan digunakan jaringan
 fisik berupa wifi atau LAN, sedangkan untuk menghubungkan 
\emph on
container
\emph default
 yang terdapat pada 3 komputer tersebut maka digunakan jaringan 
\emph on
overlay
\emph default
.
 Untuk membuat jaringan 
\emph on
overlay
\emph default
 pada kubernetes, maka digunakan flannel dimana flannel berfungsi memberi
 subnet ke masing - masing 
\emph on
host
\emph default
 untuk digunakan pada 
\emph on
container
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "sayfan2017mastering"
literal "true"

\end_inset

.
 Gambar 4.16 adalah arsitektur kubernetes yang dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Kubernetes Orchestrate.png
	width 13.688cm
	height 17.533cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur Kubernetes pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.16, masing - masing service dijalankan pada docker container
 sehingga kubernetes dapat melakukan distribusi docker container pada masing
 - masing node.
\end_layout

\begin_layout Subsection

\emph on
Monitor the System and Provide Feedback
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Langkah yang terakhir untuk melakukan 
\emph on
refactoring
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah melakukan 
\emph on
monitoring
\emph default
 terhadap 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 yang sedang berjalan.
 Untuk melakukan 
\emph on
monitoring
\emph default
 setiap 
\emph on
service
\emph default
 maka diperlukan 
\emph on
log
\emph default
 dari setiap 
\emph on
service
\emph default
, dimana 
\emph on
log
\emph default
 tersebut berisi mengenai apa yang dikerjakan oleh masing - masing 
\emph on
service
\emph default
.
 Pada penelitian ini, 3 produk 
\emph on
open
\emph default
 
\emph on
source
\emph default
 digunakan untuk 
\emph on
monitoring
\emph default
 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 pada 
\emph on
microservice
\emph default
 yaitu zipkin , spring boot admin dan kubernetes dashboard.
 Gambar 4.17 adalah arsitektur monitoring yang akan dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Monitoring.png
	width 10.724cm
	height 15.275cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur Monitoring pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.17, 
\emph on
developer
\emph default
 dapat melakukan monitoring 
\emph on
service
\emph default
 - 
\emph on
service
\emph default
 pada 
\emph on
microservice
\emph default
.
 Masing - masing 
\emph on
service
\emph default
 mengirimkan log kepada 
\emph on
admin
\emph default
 
\emph on
dashboard
\emph default
 dan 
\emph on
zipkin
\emph default
 
\emph on
server
\emph default
, sedangkan untuk 
\emph on
docker
\emph default
 
\emph on
container
\emph default
 mengirimkan 
\emph on
health
\emph default
 
\emph on
check
\emph default
 kepada 
\emph on
kubernetes
\emph default
 
\emph on
dashboard
\emph default
.
\end_layout

\begin_layout Section
Refactoring Database
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada penelitian ini, 
\emph on
Schema-per-service
\emph default
 digunakan sebagai pola database untuk pengembangan arsitektur microservice
 pada PT.
 Graha Usaha Teknik.
 Penggunaan pola 
\emph on
Schema-per-service 
\emph default
dikarenkan untuk mengurangi penggunaan 
\emph on
resource
\emph default
 yang berlebihan, sehingga hanya diperlukan 1 
\emph on
container
\emph default
 untuk menampung beberapa 
\emph on
database
\emph default
 yang diperlukan oleh masing - masing service.
 
\end_layout

\begin_layout Standard
Pada penelitian ini, skenario 
\emph on
Add a Column Migration 
\emph default
digunakan sebagai skenario untuk mengurangi kesalahan, duplikasi data pada
 
\emph on
database
\emph default
, kegagalan pada saat proses migrasi dan kehilangan data.
 Pada skenario ini terdapat 4 langkah yang dijalankan yaitu
\begin_inset CommandInset citation
LatexCommand cite
key "MigratingtoMicroservice"
literal "true"

\end_inset

.
\end_layout

\begin_layout Enumerate

\emph on
Add Column 
\emph default
yaitu membuat 
\emph on
column
\emph default
 pada tabel berdasarkan 
\emph on
database
\emph default
 yang akan digunakan oleh 
\emph on
service
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Code computes the read value and writes to new column
\emph default
 yaitu 
\emph on
service
\emph default
 akan membaca dan menambah data pada column yang baru, jika data tidak tersedia
 di masing - masing 
\emph on
column
\emph default
 maka 
\emph on
service
\emph default
 akan melakukan proses untuk mencari data atau 
\emph on
service
\emph default
 menggunakan data 
\emph on
default
\emph default
.
\end_layout

\begin_layout Enumerate

\emph on
Update
\emph default
 
\emph on
data
\emph default
 
\emph on
using shards
\emph default
 yaitu proses melakukan replikasi data dari 
\emph on
database
\emph default
 lama ke 
\emph on
database
\emph default
 baru.
\end_layout

\begin_layout Enumerate

\emph on
Code reads and writes from the new column
\emph default
 yaitu service akan membaca dan menambah data pada 
\emph on
column
\emph default
 yang baru.
\end_layout

\begin_layout Section

\emph on
Refactoring
\emph default
 
\emph on
Source
\emph default
 
\emph on
Code
\emph default
 
\emph on
Monolitich
\emph default
 Menjadi 
\emph on
Microservice
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tahapan penelitian ini berfungsi untuk mengubah 
\emph on
source
\emph default
 
\emph on
code
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
.
 
\emph on
Source
\emph default
 
\emph on
code
\emph default
 
\emph on
monolitich
\emph default
 dipecah berdasarkan bisnis proses sesuai dengan tahapan 
\emph on
Decompose
\emph default
 
\emph on
the
\emph default
 
\emph on
Monolith
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "balalaie2015microservices"
literal "true"

\end_inset

.
 Proses 
\emph on
refactoring
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 dilakukan secara bertahap, adapun proses 
\emph on
refactoring
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
 adalah sebagai berikut.
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 melakukan 
\emph on
clone
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 
\emph on
monolitich
\emph default
 dari gitlab.
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 membuat 
\emph on
repository
\emph default
 baru untuk 
\emph on
service
\emph default
 yang dikembangkan.
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 melakukan 
\emph on
refactoring
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 dengan cara melakukan 
\emph on
copy
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 dari 
\emph on
monolitich
\emph default
 ke 
\emph on
service
\emph default
 
\emph on
microservice
\emph default
.
 Jika pada saat 
\emph on
refactoring
\emph default
 ini membutuhkan 
\emph on
service
\emph default
 lain misalnya seperti pemanggilan 
\emph on
method
\emph default
 
\emph on
service
\emph default
 maka diganti dengan pemanggilan API.
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 membuat 
\emph on
testing
\emph default
 untuk 
\emph on
service
\emph default
 yang telah selesai dikembangkan.
\end_layout

\begin_layout Enumerate

\emph on
Developer
\emph default
 melakukan 
\emph on
push
\emph default
 
\emph on
source
\emph default
 
\emph on
code
\emph default
 ke 
\emph on
repository
\emph default
 gitlab.
\end_layout

\begin_layout Standard
Proses diatas dilakukan secara bertahap berdasarkan urutan 
\emph on
service
\emph default
 yang telah dijelaskan pada langkah 
\emph on
refactoring
\emph default
 
\emph on
monolithic
\emph default
 menjadi 
\emph on
microservice
\emph default
.
 
\emph on
Source
\emph default
 
\emph on
code
\emph default
 masing - masing 
\emph on
service
\emph default
 ditulis dengan menggunakan bahasa pemrograman kotlin.
 Gambar 4.18 adalah arsitektur microservice yang dikembangkan pada PT.
 Graha Usaha Teknik.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Microservice Architecture.png
	width 14.711cm
	height 10.548cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arsitektur Microservice Pada PT.
 Graha Usaha Teknik
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.18, seluruh 
\emph on
source
\emph default
 
\emph on
code
\emph default
 dilakukan 
\emph on
refactoring
\emph default
 dari 
\emph on
monolitich
\emph default
 menjadi 
\emph on
microservice
\emph default
.
 Seluruh 
\emph on
source
\emph default
 
\emph on
code
\emph default
 tersebut akan dijalankan di masing - masing docker container.
\end_layout

\begin_layout Section
Pembuatan Docker Image
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada tahapan 
\emph on
containerize the services
\emph default
, masing - masing 
\emph on
service
\emph default
 dibuatkan sebuah 
\emph on
container
\emph default
 untuk menjalankan 
\emph on
service
\emph default
 tersebut.
 Untuk dapat menjalankan 
\emph on
service
\emph default
 tersebut maka diperlukan pembuatan docker 
\emph on
image
\emph default
 yang dijalankan diatas 
\emph on
container
\emph default
.
 Pembuatan docker 
\emph on
image
\emph default
 pada penelitian ini dilakukan jika seluruh 
\emph on
unit
\emph default
 
\emph on
testing
\emph default
 telah berhasil dijalankan.
 Pembuatan docker 
\emph on
image
\emph default
 dijalankan setiap terdapat pembaruan dari 
\emph on
source
\emph default
 
\emph on
code
\emph default
 dan bersifat 
\emph on
automatic
\emph default
 dengan 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
.
 Seluruh docker 
\emph on
image
\emph default
 di 
\emph on
push
\emph default
 ke sebuah 
\emph on
registry
\emph default
 yaitu docker hub.
 Pada penelitian ini, semua docker 
\emph on
image
\emph default
 dari masing - masing 
\emph on
service
\emph default
 di 
\emph on
push
\emph default
 ke docker hub.
 Gambar 4.19 adalah contoh docker 
\emph on
image
\emph default
 
\emph on
service
\emph default
 
\emph on
discovery
\emph default
 yang telah berhasil di 
\emph on
push
\emph default
 ke docker hub.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/docker hub discovery service.png
	width 13.547cm
	height 8.467cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Docker Image Service Discovery Pada Docker Hub
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section

\emph on
Deployment
\emph default
 Ke 
\emph on
Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proses 
\emph on
deployment
\emph default
 pada penelitian ini dilakukan pada 2 
\emph on
enviroment
\emph default
 yang berbeda yaitu 
\emph on
production
\emph default
 dan 
\emph on
development
\emph default
.
 Proses 
\emph on
deployment
\emph default
 pada 
\emph on
environment
\emph default
 
\emph on
development
\emph default
 dilakukan pada 3 komputer sesuai dengan penjelasan pada tahapan 
\emph on
deploy into a cluster and orchestrate containers.
 
\emph default
Proses 
\emph on
deployment
\emph default
 pada 
\emph on
environment
\emph default
 
\emph on
production
\emph default
 dilakukan pada google kubernetes engine.
 Proses 
\emph on
deployment
\emph default
 pada
\emph on
 environment
\emph default
 
\emph on
development
\emph default
 dilakukan secara bertahap dan bersifat 
\emph on
automatic
\emph default
 dengan 
\emph on
continuous
\emph default
 
\emph on
integration, 
\emph default
sedangkan proses 
\emph on
deployment
\emph default
 
\emph on
pada environment
\emph default
 
\emph on
production
\emph default
 juga dilakukan juga secara bertahap dan bersifat 
\emph on
automatic
\emph default
 dengan 
\emph on
continuous
\emph default
 
\emph on
integration
\emph default
 akan tetapi melalui persetujuan dari manager IT.
 Adapun proses pada saat deployment pada environment devlopment adalah sebagai
 berikut.
\end_layout

\begin_layout Enumerate
Gitlab melakukan clone source code terbaru dari repository.
\end_layout

\begin_layout Enumerate
Gitlab melakukan build, testing dan pembuatan docker image.
\end_layout

\begin_layout Enumerate
Gitlab melakukan deployment ke server.
\end_layout

\begin_layout Standard
Sedangkan proses pada saat deployment pada environment production adalah
 sebagai berikut.
\end_layout

\begin_layout Enumerate
Gitlab melakukan clone source code terbaru dari repository.
\end_layout

\begin_layout Enumerate
Gitlab melakukan build, testing dan pembuatan docker image.
\end_layout

\begin_layout Enumerate
Manager menyetujui proses deployment ke server.
\end_layout

\begin_layout Enumerate
Gitlab melakukan deployment ke server.
\end_layout

\begin_layout Section

\emph on
Testing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada penelitian ini, proses 
\emph on
testing
\emph default
 hanya dilakukan pada 
\emph on
enviroment
\emph default
 
\emph on
development
\emph default
.
 
\emph on
Testing
\emph default
 yang dilakukan adalah 
\emph on
performace
\emph default
 
\emph on
testing
\emph default
, yang berfungsi untuk mengukur 
\emph on
performance
\emph default
 dari masing - masing 
\emph on
service
\emph default
.
 
\emph on
Performance
\emph default
 
\emph on
testing
\emph default
 dilakukan pada dua sistem yaitu sistem yang menggunakan 
\emph on
monolitich
\emph default
 dan 
\emph on
microservice
\emph default
.
 
\emph on
Software
\emph default
 yang  digunakan untuk melakukan 
\emph on
performance
\emph default
 
\emph on
testing
\emph default
 adalah gatling.
 Tabel 4.1 adalah konfigurasi 
\emph on
java
\emph default
 
\emph on
heap
\emph default
 
\emph on
space
\emph default
 dari masing - masing sistem.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tipe Sistem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Initial Java Heap
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Maximum Heap Java Size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
512 KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
200 MB
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
512 KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
200 MB
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Konfigurasi Java Heap Space
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dari table 4.1, masing - masing sistem akan diberikan 
\emph on
initial
\emph default
 
\emph on
java
\emph default
 
\emph on
heap
\emph default
 dan 
\emph on
maximum
\emph default
 
\emph on
heap
\emph default
 
\emph on
java
\emph default
 
\emph on
size
\emph default
 yang sama.
 Pemberian nilai 
\emph on
initial
\emph default
 
\emph on
java
\emph default
 
\emph on
heap
\emph default
 berfungsi sebagai inisialisasi penggunaan memori 
\emph on
heap
\emph default
 pada 
\emph on
java
\emph default
, sedangkan pemberian pemberian nilai 
\emph on
maximum
\emph default
 
\emph on
heap
\emph default
 
\emph on
size
\emph default
 berfungsi sebagai batasan pemakaian 
\emph on
memori
\emph default
 
\emph on
heap
\emph default
 pada 
\emph on
java
\emph default
.
\end_layout

\begin_layout Standard
Adapun 
\emph on
service
\emph default
 yang dilakukan testing untuk masing - masing sistem yaitu 
\emph on
service
\emph default
 OAuth2, Man Hour, dan Man Power.
 Tabel 4.2 adalah hasil 
\emph on
testing
\emph default
 dari 
\emph on
service
\emph default
 OAuth2 pada sistem 
\emph on
microservice
\emph default
 dan 
\emph on
monolitch
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tipe Sistem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Transaction 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Response Time
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Sukses
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Gagal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Per Second
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Minimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Maksimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Rata - Rata
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
157 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2036 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
293 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3190 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
941 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2946
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
153 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4047 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
314 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8781 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1187 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5841
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
159
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10941 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
859 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8399
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
601
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
36759 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4467 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8246
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
754
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Hasil Testing Pada Service OAuth2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan tabel 4.2, pengujian dilakukan dengan 3 jenis tps yaitu 5, 10
 dan 15 tps.
 Pengujian tps ini dilakukan untuk mengetahui kemampuan sebuah sistem dalam
 menangani 
\emph on
request
\emph default
 dalam jumlah yang sangat banyak.
 Dari tabel 4.2, dapat disimpulkan bahwa pada saat pengujian 5 tps, sistem
 
\emph on
microservice
\emph default
 tidak mengalami kegagalan dan memiliki waktu rata - rata 
\emph on
response
\emph default
 kurang dari setengah detik yaitu 293 ms sedangkan pada sistem 
\emph on
monolitich
\emph default
 mengalami kegagalan sebanyak 64 kali, dimana rata - rata 
\emph on
response
\emph default
 yang dihasilkan adalah 941 ms.
 Pada 10 tps, waktu rata - rata 
\emph on
response
\emph default
 yang dihasilkan oleh 
\emph on
microservice
\emph default
 juga masih kecil yaitu 314 ms, dimana semua transaksi yang dihasilkan adalah
 sukses, sedangkan pada sistem 
\emph on
monolitich
\emph default
 menunjukkan bahwa waktu rata - rata lebih dari 1 detik dengan jumlah kegagalan
 sebanyak 159.
 Pengujian pada 15 tps berdasarkan tabel 4.2 memberikan hasil bahwa sistem
 
\emph on
microservice
\emph default
 mengalami kegagal sebanyak 601 dengan waktu rata - rata 
\emph on
response
\emph default
 859 ms, sedangkan pada sistem 
\emph on
monolitich
\emph default
 terjadi kegagalan sebanyak 754 kali dengan waktu rata - rata 
\emph on
response
\emph default
 4467 ms atau 4 detik 467 ms.
\end_layout

\begin_layout Standard
Selanjutnya dilakukan pengujian terhadap 
\emph on
service
\emph default
 Man Hour.
 Tabel 4.3 adalah hasil 
\emph on
testing
\emph default
 dari 
\emph on
service
\emph default
 Man Hour pada sistem 
\emph on
microservice
\emph default
 dan 
\emph on
monolitch
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tipe Sistem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Transaction 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Response Time
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Sukses
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Gagal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Per Second
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Minimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Maksimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Rata - Rata
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2229 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
48 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1244 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
275 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2935
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
65
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2168 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
54 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
249 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2665ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
347 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5841
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
159
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32767 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
86 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8394
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
606
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
250 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18073 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1628 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8246
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
754
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Hasil Testing Pada Service Man Hour
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dari tabel 4.3, dapat disimpulkan bahwa pada saat pengujian 5 tps, sistem
 
\emph on
microservice
\emph default
 tidak mengalami kegagalan dan memiliki waktu rata - rata 
\emph on
response
\emph default
 kurang dari setengah detik yaitu 48 ms sedangkan pada sistem 
\emph on
monolitich
\emph default
 mengalami kegagalan sebanyak 65 kali, dimana rata - rata 
\emph on
response
\emph default
 yang dihasilkan adalah 275 ms.
 Pada 10 tps, waktu rata - rata 
\emph on
response
\emph default
 yang dihasilkan oleh 
\emph on
microservice
\emph default
 juga masih kecil yaitu 54 ms, dimana semua transaksi yang dihasilkan adalah
 sukses, sedangkan pada sistem 
\emph on
monolitich
\emph default
 menunjukkan bahwa waktu rata - rata 347 ms dengan jumlah kegagalan sebanyak
 159.
 Pengujian pada 15 tps berdasarkan tabel 4.3 memberikan hasil bahwa sistem
 
\emph on
microservice
\emph default
 mengalami kegagal sebanyak 606 dengan waktu rata - rata 
\emph on
response
\emph default
 86 ms, sedangkan pada sistem 
\emph on
monolitich
\emph default
 terjadi kegagalan sebanyak 754 kali dengan waktu rata - rata 
\emph on
response
\emph default
 1628 ms atau 1 detik 628 ms.
\end_layout

\begin_layout Standard
Selanjutnya dilakukan pengujian terhadap 
\emph on
service
\emph default
 Man Power.
 Tabel 4.4 adalah hasil 
\emph on
testing
\emph default
 dari 
\emph on
service
\emph default
 Man Power pada sistem 
\emph on
microservice
\emph default
 dan 
\emph on
monolitch
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tipe Sistem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Transaction 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Response Time
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Sukses
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Gagal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Per Second
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Minimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Maksimal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Rata - Rata
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1654 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
46 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1129 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
274 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2935
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
65
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
932 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
249 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4511 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
349 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5841
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
159
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Microservice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7367 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
80 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8396
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
604
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Monolitich
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 tps
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
250 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18009 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1568 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8246
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
754
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Hasil Testing Pada Service Man Power
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dari tabel 4.4, dapat disimpulkan bahwa pada saat pengujian 5 tps, sistem
 
\emph on
microservice
\emph default
 tidak mengalami kegagalan dan memiliki waktu rata - rata response kurang
 dari setengah detik yaitu 46 ms sedangkan pada sistem 
\emph on
monolitich
\emph default
 mengalami kegagalan sebanyak 65 kali, dimana rata - rata 
\emph on
response
\emph default
 yang dihasilkan adalah 274 ms.
 Pada 10 tps, waktu rata - rata 
\emph on
response
\emph default
 yang dihasilkan oleh 
\emph on
microservice
\emph default
 juga masih kecil yaitu 52 ms, dimana semua transaksi yang dihasilkan adalah
 sukses, sedangkan pada sistem 
\emph on
monolitich
\emph default
 menunjukkan bahwa waktu rata - rata 349 ms dengan jumlah kegagalan sebanyak
 159.
 Pengujian pada 15 tps berdasarkan tabel 4.4 memberikan hasil bahwa sistem
 
\emph on
microservice
\emph default
 mengalami kegagal sebanyak 604 dengan waktu rata - rata 
\emph on
response
\emph default
 80 ms, sedangkan pada sistem 
\emph on
monolitich
\emph default
 terjadi kegagalan sebanyak 754 kali dengan waktu rata - rata 
\emph on
response
\emph default
 1568 ms atau 1 detik 568 ms.
\end_layout

\begin_layout Section

\emph on
Monitoring
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proses 
\emph on
monitoring
\emph default
 berfungsi untuk melihat status informasi, 
\emph on
latency
\emph default
 dan membantu developer untuk mengetahui kesalahan dari masing - masing
 
\emph on
service
\emph default
.
 Pada penelitian ini, terdapat 2 monitoring yang dapat digunakan yaitu monitorin
g service melalui dashboard administrator dan latency service melalui dashboard
 zipkin server.
\end_layout

\begin_layout Subsection
Monitoring Melalui Dashboard Administrator
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pada penelitian ini, dashboard administrator digunakan sebagai monitoring
 agar developer dapat mengetahui status dan informasi dari masing - masing
 service.
 Pada dashboard administrator, developer dapat mengetahui apakah sebuah
 service dalam keadaan nyala atau mati dan dapat membaca log untuk kebutuhan
 troubleshoot dari sebuah service.
 Gambar 4.20 adalah dashboard administrator untuk melihat status dan informasi
 masing - masing service.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/admin-dashboard.png
	width 13.826cm
	height 8.644cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Dashboard Administrator
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.20, developer dapat melihat status dari masing - masing
 service.
 Jika service tersebut dalam keadaan UP, maka service tersebut dalam keadaan
 hidup sebaliknya jika service dalam keadaan DOWN maka service tersebut
 dalam kedaaan mati.
 Dari gambar 4.20, developer juga dapat mengetahui jumlah replikasi dari
 masing - masing service, contohnya discovery service pada gambar 4.20 terdapat
 2 replikasi yang sedang berjalan.
\end_layout

\begin_layout Standard
Melalui dashboard administrator, developer dapat membaca log dari masing
 - masing service.
 Jika terjadi error pada service, developer akan membaca log dari masing
 - masing service, lalu mengambil kesimpulan mengenai error yang terjadi
 pada service tersebut.
 Gambar 4.21 adalah dashboard administrator untuk membaca log dari masing
 - masing service.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/admin-dashboard-log.png
	width 11.828cm
	height 7.391cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Log Pada Dashboard Administrator
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Monitoring Melalui Dashboard Zipkin Server
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Monitoring melalui dashboard zipkin server berfungsi untuk membaca latency
 yang terjadi antar service, sehingga developer dapat memperkecil latency
 antar aplikasi.
 Gambar 4.22 adalah dashboard zipkin server yang digunakan pada penelitian
 ini.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/zipkin-server.png
	width 12.827cm
	height 8.018cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Dashboard Zipkin Server
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Berdasarkan gambar 4.22, developer dapat membaca bahwa latency dari service
 api gateway, man power dan position time constant adalah 37.069 ms.
 Dari gambar 4.22, developer juga dapat mengetahui latency dari masing -
 masing service yaitu position time constant dengan latency 17.000 ms, service
 man power dengan 30.000 ms dan api gateway dengan latency sebesar 37.069
 ms.
\end_layout

\begin_layout Chapter
KESIMPULAN DAN SARAN
\end_layout

\begin_layout Section
Kesimpulan
\end_layout

\begin_layout Section
Saran
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand
\backslash
bibname{DAFTAR PUSTAKA}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "biblio"
options "apalike"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Daftar Pustaka}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Lampiran 1
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{fancy}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[C]{L 
\backslash
thepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Lampiran}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proin eu leo quis risus congue aliquam quis nec mauris.
 Donec cursus pretium diam, eget sagittis massa aliquet ut.
 Suspendisse potenti.
 Vestibulum adipiscing lorem et urna imperdiet interdum ornare eros aliquet.
 Aliquam quis ligula in libero condimentum pulvinar.
 Integer a ante metus.
 Sed eu quam eu lorem cursus posuere.
 Duis sed ligula leo, a scelerisque elit.
 Nam pretium, leo in rhoncus scelerisque, felis lacus imperdiet mi, vitae
 semper lectus nisl volutpat mi.
 Vivamus id augue mi, quis lacinia enim.
 Proin tincidunt mattis lacus eu sollicitudin.
 Maecenas varius diam quis ipsum pharetra a venenatis dui elementum.
 
\end_layout

\begin_layout Standard
Proin eu leo quis risus congue aliquam quis nec mauris.
 Donec cursus pretium diam, eget sagittis massa aliquet ut.
 Suspendisse potenti.
 Vestibulum adipiscing lorem et urna imperdiet interdum ornare eros aliquet.
 Aliquam quis ligula in libero condimentum pulvinar.
 Integer a ante metus.
 Sed eu quam eu lorem cursus posuere.
 Duis sed ligula leo, a scelerisque elit.
 Nam pretium, leo in rhoncus scelerisque, felis lacus imperdiet mi, vitae
 semper lectus nisl volutpat mi.
 Vivamus id augue mi, quis lacinia enim.
 Proin tincidunt mattis lacus eu sollicitudin.
 Maecenas varius diam quis ipsum pharetra a venenatis dui elementum.
 
\end_layout

\begin_layout Standard
Proin eu leo quis risus congue aliquam quis nec mauris.
 Donec cursus pretium diam, eget sagittis massa aliquet ut.
 Suspendisse potenti.
 Vestibulum adipiscing lorem et urna imperdiet interdum ornare eros aliquet.
 Aliquam quis ligula in libero condimentum pulvinar.
 Integer a ante metus.
 Sed eu quam eu lorem cursus posuere.
 Duis sed ligula leo, a scelerisque elit.
 Nam pretium, leo in rhoncus scelerisque, felis lacus imperdiet mi, vitae
 semper lectus nisl volutpat mi.
 Vivamus id augue mi, quis lacinia enim.
 Proin tincidunt mattis lacus eu sollicitudin.
 Maecenas varius diam quis ipsum pharetra a venenatis dui elementum.
 
\end_layout

\begin_layout Standard
Proin eu leo quis risus congue aliquam quis nec mauris.
 Donec cursus pretium diam, eget sagittis massa aliquet ut.
 Suspendisse potenti.
 Vestibulum adipiscing lorem et urna imperdiet interdum ornare eros aliquet.
 Aliquam quis ligula in libero condimentum pulvinar.
 Integer a ante metus.
 Sed eu quam eu lorem cursus posuere.
 Duis sed ligula leo, a scelerisque elit.
 Nam pretium, leo in rhoncus scelerisque, felis lacus imperdiet mi, vitae
 semper lectus nisl volutpat mi.
 Vivamus id augue mi, quis lacinia enim.
 Proin tincidunt mattis lacus eu sollicitudin.
 Maecenas varius diam quis ipsum pharetra a venenatis dui elementum.
 
\end_layout

\begin_layout Standard
Proin eu leo quis risus congue aliquam quis nec mauris.
 Donec cursus pretium diam, eget sagittis massa aliquet ut.
 Suspendisse potenti.
 Vestibulum adipiscing lorem et urna imperdiet interdum ornare eros aliquet.
 Aliquam quis ligula in libero condimentum pulvinar.
 Integer a ante metus.
 Sed eu quam eu lorem cursus posuere.
 Duis sed ligula leo, a scelerisque elit.
 Nam pretium, leo in rhoncus scelerisque, felis lacus imperdiet mi, vitae
 semper lectus nisl volutpat mi.
 Vivamus id augue mi, quis lacinia enim.
 Proin tincidunt mattis lacus eu sollicitudin.
 Maecenas varius diam quis ipsum pharetra a venenatis dui elementum.
 
\end_layout

\begin_layout Standard
Proin eu leo quis risus congue aliquam quis nec mauris.
 Donec cursus pretium diam, eget sagittis massa aliquet ut.
 Suspendisse potenti.
 Vestibulum adipiscing lorem et urna imperdiet interdum ornare eros aliquet.
 Aliquam quis ligula in libero condimentum pulvinar.
 Integer a ante metus.
 Sed eu quam eu lorem cursus posuere.
 Duis sed ligula leo, a scelerisque elit.
 Nam pretium, leo in rhoncus scelerisque, felis lacus imperdiet mi, vitae
 semper lectus nisl volutpat mi.
 Vivamus id augue mi, quis lacinia enim.
 Proin tincidunt mattis lacus eu sollicitudin.
 Maecenas varius diam quis ipsum pharetra a venenatis dui elementum.
 
\end_layout

\begin_layout Chapter*
Lampiran 2
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{fancy}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[C]{L 
\backslash
thepage}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
